// save original API functions
let e=Room.prototype.find,t={};module.exports=t,t.register=function(){Room.costMatrixInvalid.on(e=>Room.rebuildCostMatrix(e.name||e)),Flag.found.on(e=>Room.roomLayout(e))},Room.pathfinderCache={},Room.pathfinderCacheDirty=!1,Room.pathfinderCacheLoaded=!1,Room.COSTMATRIX_CACHE_VERSION=3,t.extend=function(){for(const t of Object.keys(Room._ext))Room._ext[t].extend&&Room._ext[t].extend();let o=function(e){this.room=e,Object.defineProperties(this,{all:{configurable:!0,get:function(){if(_.isUndefined(this._container)){this._container=[];let e=e=>{let t=Game.getObjectById(e.id);t&&(_.assign(t,e),this._container.push(t))};_.forEach(this.room.memory.container,e)}return this._container}},controller:{configurable:!0,get:function(){if(_.isUndefined(this._controller))if(this.room.my&&this.room.controller.memory.storage)this._controller=[Game.getObjectById(this.room.controller.memory.storage)],this._controller[0]||delete this.room.controller.memory.storage;else{let e=e=>1==e.controller;this._controller=_.filter(this.all,e)}return this._controller}},in:{configurable:!0,get:function(){if(_.isUndefined(this._in)){let e=e=>0==e.controller;this._in=_.filter(this.all,e);let t=e=>e.sum>=e.storeCapacity*(1-MANAGED_CONTAINER_TRIGGER);this._in=this._in.concat(this.managed.filter(t))}return this._in}},out:{configurable:!0,get:function(){if(_.isUndefined(this._out)){let e=e=>1==e.controller;this._out=_.filter(this.all,e);let t=e=>e.sum<=e.storeCapacity*MANAGED_CONTAINER_TRIGGER;this._out=this._out.concat(this.managed.filter(t))}return this._out}},privateers:{configurable:!0,get:function(){if(_.isUndefined(this._privateers)){let e=e=>e.source===!1&&!e.mineral&&e.sum<e.storeCapacity;this._privateers=_.filter(this.all,e)}return this._privateers}},managed:{configurable:!0,get:function(){if(_.isUndefined(this._managed)){let e=e=>e.source===!0&&1==e.controller;this._managed=_.filter(this.all,e)}return this._managed}}})},r=function(e){this.room=e,Object.defineProperties(this,{all:{configurable:!0,get:function(){if(_.isUndefined(this._all)){this._all=[];let e=e=>{let t=Game.getObjectById(e.id);t&&(_.assign(t,e),this._all.push(t))};_.forEach(this.room.memory.links,e)}return this._all}},controller:{configurable:!0,get:function(){if(_.isUndefined(this._controller)){let e=e=>e.controller===!0;this._controller=this.all.filter(e)}return this._controller}},storage:{configurable:!0,get:function(){if(_.isUndefined(this._storage)){let e=e=>1==e.storage;this._storage=this.all.filter(e)}return this._storage}},in:{configurable:!0,get:function(){if(_.isUndefined(this._in)){let e=e=>0==e.storage&&0==e.controller;this._in=_.filter(this.all,e)}return this._in}},privateers:{configurable:!0,get:function(){if(_.isUndefined(this._privateers)){let e=e=>0==e.storage&&0==e.controller&&0==e.source&&e.energy<.85*e.energyCapacity;this._privateers=_.filter(this.all,e)}return this._privateers}}})},i=function(e){this.room=e,Object.defineProperties(this,{all:{configurable:!0,get:function(){if(_.isUndefined(this._all)){this._all=[];let e=e=>{let t=Game.getObjectById(e.id);t&&(_.assign(t,e),this._all.push(t))};_.forEach(this.room.memory.powerSpawns,e)}return this._all}}})},n=function(e){this.room=e,Object.defineProperties(this,{all:{configurable:!0,get:function(){if(_.isUndefined(this._all)){this._all=[];let e=e=>{let t=Game.getObjectById(e.id);t&&(_.assign(t,e),this._all.push(t))};_.forEach(this.room.memory.nukers,e)}return this._all}}})},s=function(e){this.room=e,Object.defineProperties(this,{all:{configurable:!0,get:function(){return _.isUndefined(this._all)&&(this._all=this.room.find(FIND_STRUCTURES)),this._all}},my:{configurable:!0,get:function(){return _.isUndefined(this._my)&&(this._my=this.room.find(FIND_MY_STRUCTURES)),this._my}},spawns:{configurable:!0,get:function(){if(_.isUndefined(this._spawns)){this._spawns=[];var e=e=>{addById(this._spawns,e)};_.forEach(this.room.memory.spawns,e)}return this._spawns}},towers:{configurable:!0,get:function(){if(_.isUndefined(this._towers)){this._towers=[];var e=e=>{addById(this._towers,e)};_.forEach(this.room.memory.towers,e)}return this._towers}},repairable:{configurable:!0,get:function(){if(_.isUndefined(this._repairable)){let e=this;this._repairable=_.sortBy(e.all.filter(t=>t.hits<t.hitsMax&&(!e.room.my||t.hits<MAX_REPAIR_LIMIT[e.room.controller.level]||t.hits<LIMIT_URGENT_REPAIRING+(2*DECAY_AMOUNT[t.structureType]||0))&&(!DECAYABLES.includes(t.structureType)||t.hitsMax-t.hits>GAP_REPAIR_DECAYABLE)&&(void 0===Memory.pavementArt[e.room.name]||Memory.pavementArt[e.room.name].indexOf("x"+t.pos.x+"y"+t.pos.y+"x")<0)&&!FlagDir.list.some(e=>e.roomName==t.pos.roomName&&e.color==COLOR_ORANGE&&e.x==t.pos.x&&e.y==t.pos.y)),"hits")}return this._repairable}},urgentRepairable:{configurable:!0,get:function(){if(_.isUndefined(this._urgentRepairableSites)){var e=e=>e.hits<LIMIT_URGENT_REPAIRING+(DECAY_AMOUNT[e.structureType]||0);this._urgentRepairableSites=_.filter(this.repairable,e)}return this._urgentRepairableSites}},fortifyable:{configurable:!0,get:function(){if(_.isUndefined(this._fortifyableSites)){let e=this;this._fortifyableSites=_.sortBy(e.all.filter(t=>e.room.my&&t.hits<t.hitsMax&&t.hits<MAX_FORTIFY_LIMIT[e.room.controller.level]&&(t.structureType!=STRUCTURE_CONTAINER||t.hits<MAX_FORTIFY_CONTAINER)&&(!DECAYABLES.includes(t.structureType)||t.hitsMax-t.hits>3*GAP_REPAIR_DECAYABLE)&&(void 0===Memory.pavementArt[e.room.name]||Memory.pavementArt[e.room.name].indexOf("x"+t.pos.x+"y"+t.pos.y+"x")<0)&&!FlagDir.list.some(e=>e.roomName==t.pos.roomName&&e.color==COLOR_ORANGE&&e.x==t.pos.x&&e.y==t.pos.y)),"hits")}return this._fortifyableSites}},fuelable:{configurable:!0,get:function(){if(_.isUndefined(this._fuelables)){var e=this,t=e.room.situation.invasion?1:.82,o=e=>e.energy<e.energyCapacity*t;this._fuelables=_.sortBy(_.filter(this.towers,o),"energy")}return this._fuelables}},container:{configurable:!0,get:function(){return _.isUndefined(this._container)&&(this._container=new o(this.room)),this._container}},links:{configurable:!0,get:function(){return _.isUndefined(this._links)&&(this._links=new r(this.room)),this._links}},labs:{configurable:!0,get:function(){return _.isUndefined(this._labs)&&(this._labs=new Room.Labs(this.room)),this._labs}},virtual:{configurable:!0,get:function(){return _.isUndefined(this._virtual)&&(this._virtual=_(this.all).concat(this.piles)),this._virtual}},piles:{configurable:!0,get:function(){if(_.isUndefined(this._piles)){const e=this.room;this._piles=FlagDir.filter(FLAG_COLOR.command.drop,e.getPositionAt(25,25),!0).map(function(t){const o=Game.flags[t.name],r=e.lookForAt(LOOK_ENERGY,o.pos.x,o.pos.y);return r.length&&r[0]||o})}return this._piles}},observer:{configurable:!0,get:function(){return _.isUndefined(this._observer)&&this.room.memory.observer&&(this._observer=Game.getObjectById(this.room.memory.observer.id)),this._observer}},nuker:{configurable:!0,get:function(){return _.isUndefined(this._nuker)&&this.room.memory.nukers&&this.room.memory.nukers.length>0&&(this._nuker=Game.getObjectById(this.room.memory.nukers[0].id)),this._nuker}},nukers:{configurable:!0,get:function(){return _.isUndefined(this._nukers)&&(this._nukers=new n(this.room)),this._nukers}},powerSpawn:{configurable:!0,get:function(){return _.isUndefined(this._powerSpawn)&&this.room.memory.powerSpawns&&this.room.memory.powerSpawns.length>0&&(this._powerSpawn=Game.getObjectById(this.room.memory.powerSpawns[0].id)),this._powerSpawn}},powerSpawns:{configurable:!0,get:function(){return _.isUndefined(this._powerSpawns)&&(this._powerSpawns=new i(this.room)),this._powerSpawns}},extensions:{configurable:!0,get:function(){return _.isUndefined(this.room.memory.extensions)&&this.room.saveExtensions(),_.isUndefined(this._extensions)&&(this._extensions=_.map(this.room.memory.extensions,e=>Game.getObjectById(e))),this._extensions}}})};Object.defineProperties(Room.prototype,{structures:{configurable:!0,get:function(){return _.isUndefined(this._structures)&&(this._structures=new s(this)),this._structures}},sources:{configurable:!0,get:function(){if((_.isUndefined(this.memory.sources)||"sim"==this.name)&&(this._sources=this.find(FIND_SOURCES),this._sources.length>0?this.memory.sources=this._sources.map(e=>e.id):this.memory.sources=[]),_.isUndefined(this._sources)){this._sources=[];var e=e=>{addById(this._sources,e)};this.memory.sources.forEach(e)}return this._sources}},powerBank:{configurable:!0,get:function(){return _.isUndefined(this.memory.powerBank)&&([this._powerBank]=this.find(FIND_STRUCTURES,{filter:e=>e instanceof StructurePowerBank}),this._powerBank&&(this.memory.powerBank=this._powerBank.id)),_.isUndefined(this._powerBank)&&(this._powerBank=Game.getObjectById(this.memory.powerBank)),this._powerBank}},droppedResources:{configurable:!0,get:function(){return _.isUndefined(this._droppedResources)&&(this._droppedResources=this.find(FIND_DROPPED_RESOURCES)),this._droppedResources}},sourceAccessibleFields:{configurable:!0,get:function(){if(_.isUndefined(this.memory.sourceAccessibleFields)){let t=0,o=this.sources;var e=e=>t+=e.accessibleFields;_.forEach(o,e),this.memory.sourceAccessibleFields=t}return this.memory.sourceAccessibleFields}},sourceEnergyAvailable:{configurable:!0,get:function(){if(_.isUndefined(this._sourceEnergyAvailable)){this._sourceEnergyAvailable=0;var e=e=>this._sourceEnergyAvailable+=e.energy;_.forEach(this.sources,e)}return this._sourceEnergyAvailable}},ticksToNextRegeneration:{configurable:!0,get:function(){return _.isUndefined(this._ticksToNextRegeneration)&&(this._ticksToNextRegeneration=_(this.sources).map("ticksToRegeneration").min()||0),this._ticksToNextRegeneration}},relativeEnergyAvailable:{configurable:!0,get:function(){return _.isUndefined(this._relativeEnergyAvailable)&&(this._relativeEnergyAvailable=this.energyCapacityAvailable>0?this.energyAvailable/this.energyCapacityAvailable:0),this._relativeEnergyAvailable}},reservedSpawnEnergy:{configurable:!0,get:function(){return _.isUndefined(this._reservedSpawnEnergy)&&(this._reservedSpawnEnergy=0),this._reservedSpawnEnergy},set:function(e){this._reservedSpawnEnergy=e}},remainingEnergyAvailable:{configurable:!0,get:function(){return this.energyAvailable-this.reservedSpawnEnergy}},relativeRemainingEnergyAvailable:{configurable:!0,get:function(){return this.energyCapacityAvailable>0?this.remainingEnergyAvailable/this.energyCapacityAvailable:0}},towerFreeCapacity:{configurable:!0,get:function(){if(_.isUndefined(this._towerFreeCapacity)){this._towerFreeCapacity=0;var e=e=>this._towerFreeCapacity+=e.energyCapacity-e.energy;_.forEach(this.structures.towers,e)}return this._towerFreeCapacity}},constructionSites:{configurable:!0,get:function(){return _.isUndefined(this._constructionSites)&&(this._constructionSites=this.find(FIND_CONSTRUCTION_SITES)),this._constructionSites}},myConstructionSites:{configurable:!0,get:function(){return _.isUndefined(this._myConstructionSites)&&(this._myConstructionSites=this.find(FIND_MY_CONSTRUCTION_SITES)),this._myConstructionSites}},creeps:{configurable:!0,get:function(){return _.isUndefined(this._creeps)&&(this._creeps=this.find(FIND_MY_CREEPS)),this._creeps}},allCreeps:{configurable:!0,get:function(){return _.isUndefined(this._allCreeps)&&(this._allCreeps=this.find(FIND_CREEPS)),this._allCreeps}},immobileCreeps:{configurable:!0,get:function(){return _.isUndefined(this._immobileCreeps)&&(this._immobileCreeps=_.filter(this.creeps,e=>{const t=e.data&&e.data.determinatedSpot;return t&&e.pos.isEqualTo(e.room.getPositionAt(t.x,t.y))})),this._immobileCreeps}},hostiles:{configurable:!0,get:function(){return _.isUndefined(this._hostiles)&&(this._hostiles=this.find(FIND_HOSTILE_CREEPS,{filter:Task.reputation.hostileOwner})),this._hostiles}},hostileIds:{configurable:!0,get:function(){return _.isUndefined(this._hostileIds)&&(this._hostileIds=_.map(this.hostiles,"id")),this._hostileIds}},combatCreeps:{configurable:!0,get:function(){return _.isUndefined(this._combatCreeps)&&(this._combatCreeps=this.creeps.filter(e=>["melee","ranger","healer","warrior"].includes(e.data.creepType))),this._combatCreeps}},casualties:{configurable:!0,get:function(){if(_.isUndefined(this._casualties)){var e=e=>e.hits<e.hitsMax&&(void 0===e.towers||0==e.towers.length);this._casualties=_.sortBy(_.filter(this.creeps,e),"hits")}return this._casualties}},situation:{configurable:!0,get:function(){return _.isUndefined(this._situation)&&(this._situation={noEnergy:0==this.sourceEnergyAvailable,invasion:this.hostiles.length>0&&(!this.controller||!this.controller.safeMode)}),this._situation}},roadConstructionTrace:{configurable:!0,get:function(){return _.isUndefined(this.memory.roadConstructionTrace)&&(this.memory.roadConstructionTrace={}),this.memory.roadConstructionTrace}},adjacentRooms:{configurable:!0,get:function(){return _.isUndefined(this.memory.adjacentRooms)&&(this.memory.adjacentRooms=Room.adjacentRooms(this.name)),this.memory.adjacentRooms}},adjacentAccessibleRooms:{configurable:!0,get:function(){return _.isUndefined(this.memory.adjacentAccessibleRooms)&&(this.memory.adjacentAccessibleRooms=Room.adjacentAccessibleRooms(this.name)),this.memory.adjacentAccessibleRooms}},privateerMaxWeight:{configurable:!0,get:function(){if(_.isUndefined(this._privateerMaxWeight)&&(this._privateerMaxWeight=0,!this.situation.invasion&&!this.conserveForDefense)){let e,t,o,r,i=1e3*this.controller.level,n=this,s=FlagDir.filter([FLAG_COLOR.invade.robbing,FLAG_COLOR.invade.exploit]),a=e=>{e!=n.name&&Room.isMine(e)&&t++},c=s=>{this.adjacentAccessibleRooms.includes(s.roomName)&&(o=Game.rooms[s.roomName],o?(e=o.adjacentAccessibleRooms,r=o.sources.length):(e=Room.adjacentAccessibleRooms(s.roomName),r=1),t=1,e.forEach(a),n._privateerMaxWeight+=r*i/t)};s.forEach(c)}return this._privateerMaxWeight}},claimerMaxWeight:{configurable:!0,get:function(){if(_.isUndefined(this._claimerMaxWeight)){this._claimerMaxWeight=0;let e,t,o,r=1250,i=2,n=this,s=this.controller.level,a=FlagDir.filter([FLAG_COLOR.claim,FLAG_COLOR.claim.reserve,FLAG_COLOR.invade.exploit]),c=a=>{if(s>3||a.color==FLAG_COLOR.claim.color&&a.secondaryColor==FLAG_COLOR.claim.secondaryColor){if(e=Room.roomDistance(n.name,a.roomName),e>i)return;if(o=Game.flags[a.name],o.room&&o.room.controller&&o.room.controller.reservation&&o.room.controller.reservation.ticksToEnd>2500)return;t=o.targetOf&&o.targetOf?_.sum(o.targetOf.map(e=>"claimer"==e.creepType?e.weight:0)):0,n._claimerMaxWeight+=r-t}};a.forEach(c)}return this._claimerMaxWeight}},conserveForDefense:{configurable:!0,get:function(){return this.my&&this.storage&&this.storage.charge<0}},hostileThreatLevel:{configurable:!0,get:function(){if(_.isUndefined(this._hostileThreatLevel)){this._hostileThreatLevel=0;let e=e=>{this._hostileThreatLevel+=e.threat};this.hostiles.forEach(e)}return this._hostileThreatLevel}},defenseLevel:{configurable:!0,get:function(){if(_.isUndefined(this._defenseLevel)){this._defenseLevel={towers:0,creeps:0,sum:0};let e=e=>{this._defenseLevel.creeps+=e.threat};this.combatCreeps.forEach(e),this._defenseLevel.towers=this.structures.towers.length,this._defenseLevel.sum=this._defenseLevel.creeps+this._defenseLevel.towers*Creep.partThreat.tower}return this._defenseLevel}},minerals:{configurable:!0,get:function(){if(_.isUndefined(this._minerals)){this._minerals=[];let e=e=>{addById(this._minerals,e)};_.forEach(this.memory.minerals,e)}return this._minerals}},mineralType:{configurable:!0,get:function(){if(_.isUndefined(this.memory.mineralType)){let e=this.find(FIND_MINERALS);e&&e.length>0?this.memory.mineralType=e[0].mineralType:this.memory.mineralType=""}return this.memory.mineralType}},structureMatrix:{configurable:!0,get:function(){if(_.isUndefined(this._structureMatrix)){const t=e=>{if(_.isUndefined(Room.pathfinderCache))return Room.pathfinderCache={},Room.pathfinderCache[e]={},!1;if(_.isUndefined(Room.pathfinderCache[e]))return Room.pathfinderCache[e]={},!1;const t=Room.pathfinderCache[e],o=Game.time-t.updated;return!!(t.version===Room.COSTMATRIX_CACHE_VERSION&&(t.serializedMatrix||t.costMatrix)&&o<COST_MATRIX_VALIDITY)&&(global.DEBUG&&global.TRACE&&trace("PathFinder",{roomName:this.name,ttl:o,PathFinder:"CostMatrix"},"cached costmatrix"),!0)};if(t(this.name)){if(_.isUndefined(Room.pathfinderCache[this.name].costMatrix)){const e=PathFinder.CostMatrix.deserialize(Room.pathfinderCache[this.name].serializedMatrix);Room.pathfinderCache[this.name].costMatrix=e}this._structureMatrix=Room.pathfinderCache[this.name].costMatrix}else{global.DEBUG&&logSystem(this.name,"Calculating cost matrix");var e=new PathFinder.CostMatrix;let t=t=>{const o=t instanceof ConstructionSite;if(o&&!t.my&&Task.reputation.allyOwner(t))return e.set(t.pos.x,t.pos.y,255);if(t.structureType===STRUCTURE_ROAD){if(!o||USE_UNBUILT_ROADS)return e.set(t.pos.x,t.pos.y,1)}else{if(t.structureType===STRUCTURE_PORTAL)return e.set(t.pos.x,t.pos.y,255);if(OBSTACLE_OBJECT_TYPES.includes(t.structureType)){if(!o||Task.reputation.allyOwner(t))return e.set(t.pos.x,t.pos.y,255)}else if(t.structureType===STRUCTURE_RAMPART&&!t.my&&!t.isPublic&&(!o||Task.reputation.allyOwner(t)))return e.set(t.pos.x,t.pos.y,255)}};this.structures.all.forEach(t),this.constructionSites.forEach(t),this.immobileCreeps.forEach(t=>e.set(t.pos.x,t.pos.y,255));const o=Room.pathfinderCache[this.name].updated;Room.pathfinderCache[this.name]={costMatrix:e,updated:Game.time,version:Room.COSTMATRIX_CACHE_VERSION},Room.pathfinderCacheDirty=!0,global.DEBUG&&global.TRACE&&trace("PathFinder",{roomName:this.name,prevTime:o,structures:this.structures.all.length,PathFinder:"CostMatrix"},"updated costmatrix"),this._structureMatrix=e}}return this._structureMatrix}},creepMatrix:{configurable:!0,get:function(){if(_.isUndefined(this._creepMatrix)){const e=Room.isSKRoom(this.name)?this.structureMatrix.clone():this.avoidSKMatrix.clone();this.allCreeps.forEach(function(t){e.set(t.pos.x,t.pos.y,255)}),this._creepMatrix=e}return this._creepMatrix}},avoidSKMatrix:{configurable:!0,get:function(){if(_.isUndefined(this._avoidSKMatrix)){const e=this.hostiles.filter(e=>"Source Keeper"===e.owner.username);this._avoidSKMatrix=this.getAvoidMatrix({"Source Keeper":e})}return this._avoidSKMatrix}},my:{configurable:!0,get:function(){return _.isUndefined(this._my)&&(this._my=this.controller&&this.controller.my),this._my}},reserved:{configurable:!0,get:function(){if(_.isUndefined(this._reserved))if(this.controller){const e=_.find(Game.spawns).owner.username;this._reserved=this.controller.my||this.controller.reservation&&this.controller.reservation.username===e}else this._reserved=!1;return this._reserved}},owner:{configurable:!0,get:function(){return _.isUndefined(this._owner)&&(this.controller&&this.controller.owner?this._owner=this.controller.owner.username:this._owner=!1),this._owner}},reservation:{configurable:!0,get:function(){return _.isUndefined(this._reservation)&&(this.controller&&this.controller.reservation?this._reservation=this.controller.reservation.username:this._reservation=!1),this._reservation}},ally:{configurable:!0,get:function(){return _.isUndefined(this._ally)&&(this.reserved?this._ally=!0:this.controller?this._ally=Task.reputation.isAlly(this.owner)||Task.reputation.isAlly(this.reservation):this._ally=!1),this._ally}},spawnQueueHigh:{configurable:!0,get:function(){return _.isUndefined(this.memory.spawnQueueHigh)&&(this.memory.spawnQueueHigh=[]),this.memory.spawnQueueHigh}},spawnQueueMedium:{configurable:!0,get:function(){return _.isUndefined(this.memory.spawnQueueMedium)&&(this.memory.spawnQueueMedium=[]),this.memory.spawnQueueMedium}},spawnQueueLow:{configurable:!0,get:function(){return _.isUndefined(this.memory.spawnQueueLow)&&(this.memory.spawnQueueLow=[]),this.memory.spawnQueueLow}},pavementArt:{configurable:!0,get:function(){return _.isUndefined(this.memory.pavementArt)&&(this.memory.pavementArt=[]),this.memory.pavementArt}},collapsed:{configurable:!0,get:function(){if(_.isUndefined(this._collapsed)){if(!this.my)return void(this._collapsed=!1);if(!this.population)return void(this._collapsed=!0);let e=this.population.typeCount.worker?this.population.typeCount.worker:0,t=this.population.typeCount.hauler?this.population.typeCount.hauler:0,o=this.population.typeCount.pioneer?this.population.typeCount.pioneer:0;this._collapsed=e+t+o===0}return this._collapsed}},hostile:{configurable:!0,get:function(){return this.memory.hostile}}}),Room.prototype.countMySites=function(){const e=_.size(this.myConstructionSites);_.isUndefined(this.memory.myTotalSites)||e===this.memory.myTotalSites||Room.costMatrixInvalid.trigger(this),e>0?this.memory.myTotalSites=e:delete this.memory.myTotalSites},Room.prototype.countMyStructures=function(){const e=_.size(this.structures.my);!_.isUndefined(this.memory.myTotalStructures)&&e<this.memory.myTotalStructures&&Room.costMatrixInvalid.trigger(this),e>0?this.memory.myTotalStructures=e:delete this.memory.myTotalStructures},Room.prototype.registerIsHostile=function(){this.controller&&(_.isUndefined(this.hostile)||"number"==typeof this.hostile)&&(!this.controller.owner||this.controller.my||this.ally?delete this.memory.hostile:this.memory.hostile=this.controller.level)},Room.prototype.getBorder=function(e){return _.findKey(Game.map.describeExits(this.name),function(e){return this.name===e},{name:e})},Room.prototype.find=function(t,o){return _.isArray(t)?_(t).map(t=>e.call(this,t,o)).flatten().value():e.apply(this,arguments)},Room.prototype.findRoute=function(e,t=true,o=true){if(this.name==e)return[];const r={checkOwner:t,preferHighway:o};return Game.map.findRoute(this,e,{routeCallback:Room.routeCallback(this.name,e,r)})},Room.prototype.getBestConstructionSiteFor=function(e,t=null){let o;if(o=t?this.constructionSites.filter(t):this.constructionSites,0==o.length)return null;let r=Util.fieldOrFunction(CONSTRUCTION_PRIORITY,this),i=t=>{let o=r.indexOf(t.structureType);return e.getRangeTo(t)+(o<0?1e5:100*o)};return _.min(o,i)},Room.prototype.roadConstruction=function(e=ROAD_CONSTRUCTION_MIN_DEVIATION){if(ROAD_CONSTRUCTION_ENABLE&&Game.time%ROAD_CONSTRUCTION_INTERVAL==0&&(!_.isNumber(ROAD_CONSTRUCTION_ENABLE)||this.my&&!(ROAD_CONSTRUCTION_ENABLE>this.controller.level))){let t=Object.keys(this.roadConstructionTrace).map(e=>{return{n:this.roadConstructionTrace[e],x:e.charCodeAt(0)-32,y:e.charCodeAt(1)-32}}),o=Math.max(ROAD_CONSTRUCTION_ABS_MIN,t.reduce((e,t)=>e+t.n,0)/t.length*e);t=t.filter(e=>{if(e.n>=o){let t=this.lookForAt(LOOK_STRUCTURES,e.x,e.y);return(0===t.length||t[0].structureType===STRUCTURE_RAMPART)&&0===this.lookForAt(LOOK_CONSTRUCTION_SITES,e.x,e.y).length}return!1});let r=e=>{global.DEBUG&&logSystem(this.name,`Constructing new road at ${e.x}'${e.y} (${e.n} traces)`),this.createConstructionSite(e.x,e.y,STRUCTURE_ROAD)};_.forEach(t,r),this.roadConstructionTrace={}}},Room.prototype.recordMove=function(e){if(ROAD_CONSTRUCTION_ENABLE){let t=e.pos.x,o=e.pos.y;if(0!=t&&0!=o&&49!=t&&49!=o&&0!=e.carry.energy&&"building"!=e.data.actionName){let e=`${String.fromCharCode(32+t)}${String.fromCharCode(32+o)}_x${t}-y${o}`;this.roadConstructionTrace[e]?this.roadConstructionTrace[e]++:this.roadConstructionTrace[e]=1}}},Room.prototype.saveTowers=function(){let e=this.find(FIND_MY_STRUCTURES,{filter:{structureType:STRUCTURE_TOWER}});if(e.length>0){var t=e=>e.id;this.memory.towers=_.map(e,t)}else delete this.memory.towers},Room.prototype.saveSpawns=function(){let e=this.find(FIND_MY_SPAWNS);if(e.length>0){let t=e=>e.id;this.memory.spawns=_.map(e,t)}else delete this.memory.spawns},Room.prototype.saveNukers=function(){let e=this.find(FIND_MY_STRUCTURES,{filter:e=>e.structureType==STRUCTURE_NUKER});if(e.length>0){this.memory.nukers=[];let t=e=>{let t=this.memory.nukers.find(t=>t.id==e.id);t||this.memory.nukers.push({id:e.id})};e.forEach(t)}else delete this.memory.nukers},Room.prototype.savePowerSpawns=function(){let e=this.find(FIND_MY_STRUCTURES,{filter:e=>e.structureType==STRUCTURE_POWER_SPAWN});if(e.length>0){this.memory.powerSpawns=[];let t=e=>{let t=this.memory.powerSpawns.find(t=>t.id==e.id);t||this.memory.powerSpawns.push({id:e.id})};e.forEach(t)}else delete this.memory.powerSpawns},Room.prototype.saveExtensions=function(){const e=this.find(FIND_MY_STRUCTURES,{filter:e=>e instanceof StructureExtension}).map(e=>e.id);e.length>0?this.memory.extensions=e:delete this.memory.extensions},Room.prototype.saveContainers=function(){let e=this.structures.all.filter(e=>e.structureType==STRUCTURE_CONTAINER);if(e.length>0){this.memory.container=[];let t=e=>{let t=this.find(FIND_MINERALS),o=e.pos.findInRange(this.sources,2),r=e.pos.findInRange(t,2),i=!!(this.my&&e.pos.getRangeTo(this.controller)<=4);this.memory.container.push({id:e.id,source:o.length>0,controller:i,mineral:r.length>0});let n=t=>t.memory.container=e.id;o.forEach(n),r.forEach(n)};e.forEach(t)}else delete this.memory.container;if(this.terminal){let e=[],t=t=>{e=_(e).concat(Room.validFields(this.name,t.pos.x-1,t.pos.x+1,t.pos.y-1,t.pos.y+1,!0))};_.forEach(this.sources,t);let o=this.terminal.pos.findClosestByRange(e,1),r=[];o&&(1==this.sources.length?r=this.sources:r.push(o.isNearTo(this.sources[0])?this.sources[0]:this.sources[1]));let i=this.terminal.pos.findInRange(this.minerals,2),n=e=>e.memory.terminal=this.terminal.id;r.forEach(n),i.forEach(n)}if(this.storage){let e=this.storage.pos.findInRange(this.sources,2),t=this.storage.pos.findInRange(this.minerals,2),o=e=>e.memory.storage=this.storage.id;e.forEach(o),t.forEach(o),this.storage.pos.getRangeTo(this.controller)<4&&(this.controller.memory.storage=this.storage.id)}},Room.prototype.saveLinks=function(){let e=this.find(FIND_MY_STRUCTURES,{filter:e=>e.structureType==STRUCTURE_LINK});if(e.length>0){this.memory.links=[];let t=this.storage?this.storage.pos.findInRange(e,2).map(e=>e.id):[];/*
            let kept = [];
            let keep = (entry) => {
                if( links.find( (c) => c.id == entry.id )){
                    entry.storage = storageLinks.includes(entry.id);
                    kept.push(entry);
                }
            };
            this.memory.links.forEach(keep);
            this.memory.links = kept;
            */
this.memory.links=[];let o=e=>{if(!this.memory.links.find(t=>t.id==e.id)){let o=e.pos.getRangeTo(this.controller)<=4,r=!1;if(!o){let t=e.pos.findInRange(this.sources,2),o=t=>t.memory.link=e.id;t.forEach(o),r=t.length>0}this.memory.links.push({id:e.id,storage:t.includes(e.id),controller:o,source:r})}};e.forEach(o)}else delete this.memory.links},Room.prototype.saveMinerals=function(){let e=e=>{return{x:e.pos.x,y:e.pos.y}},t=this.structures.all.filter(e=>e.structureType==STRUCTURE_EXTRACTOR).map(e),o=e=>_.some(t,{x:e.pos.x,y:e.pos.y});const r=this.find(FIND_MINERALS).filter(o);if(r.length>0){let e=e=>e.id;this.memory.minerals=_.map(r,e)}else delete this.memory.minerals},Room.prototype.linkDispatcher=function(){let e=e=>0==e.cooldown&&e.energy>=e.energyCapacity*(e.source?.85:.5),t=e=>e.energy<.15*e.energyCapacity,o=this.structures.links.in.filter(e),r=this.structures.links.controller.filter(t);if(o.length>0){let e=this.structures.links.storage.filter(t),i=t=>{r.length>0?(t.transferEnergy(r[0]),r.shift()):e.length>0&&(t.transferEnergy(e[0]),e.shift())};o.forEach(i)}if(r.length>0){let t=this.structures.links.storage.filter(e),o=e=>{r.length>0&&(e.transferEnergy(r[0]),r.shift())};t.forEach(o)}},Room.prototype.processConstructionFlags=function(){if(this.my&&Util.fieldOrFunction(SEMI_AUTOMATIC_CONSTRUCTION,this)){let e=_.size(Game.constructionSites);if(!(e>=100)){const t=this.controller.level,o=new RoomPosition(25,25,this.name),r=[o,!0],i=(t,o)=>{if(!(e>=100)&&t){const r=new RoomPosition(t.x,t.y,t.roomName);if(r){const i=r.lookFor(LOOK_CONSTRUCTION_SITES);if(!i||!i.length){const i=r.lookFor(LOOK_STRUCTURES).filter(e=>!(e instanceof StructureRoad||e instanceof StructureRampart));if(!i||!i.length){const i=r.createConstructionSite(o);Util.fieldOrFunction(REMOVE_CONSTRUCTION_FLAG,this,o)&&i===OK&&(t.name&&(t=Game.flags[t.name],t instanceof Flag&&t.remove()),e++)}}}}};let n=CONTROLLER_STRUCTURES[STRUCTURE_EXTENSION][t]-(this.structures.extensions.length+_.filter(this.constructionSites,e=>e.structureType===STRUCTURE_EXTENSION).length);if(n>0&&FlagDir.filter(FLAG_COLOR.construct,...r).splice(0,n).forEach(e=>{i(e,STRUCTURE_EXTENSION)}),n=CONTROLLER_STRUCTURES[STRUCTURE_SPAWN][t]-(this.structures.spawns.length+_.filter(this.constructionSites,e=>e.structureType===STRUCTURE_SPAWN).length),n>0&&FlagDir.filter(FLAG_COLOR.construct.spawn,...r).splice(0,n).forEach(e=>{i(e,STRUCTURE_SPAWN)}),n=CONTROLLER_STRUCTURES[STRUCTURE_TOWER][t]-(this.structures.towers.length+_.filter(this.constructionSites,e=>e.structureType===STRUCTURE_TOWER).length),n>0&&FlagDir.filter(FLAG_COLOR.construct.tower,...r).splice(0,n).forEach(e=>{i(e,STRUCTURE_TOWER)}),n=CONTROLLER_STRUCTURES[STRUCTURE_LINK][t]-(this.structures.links.all.length+_.filter(this.constructionSites,e=>e.structureType===STRUCTURE_LINK).length),n>0&&FlagDir.filter(FLAG_COLOR.construct.link,...r).splice(0,n).forEach(e=>{i(e,STRUCTURE_LINK)}),n=CONTROLLER_STRUCTURES[STRUCTURE_LAB][t]-(this.structures.labs.all.length+_.filter(this.constructionSites,e=>e.structureType===STRUCTURE_LAB).length),n>0&&FlagDir.filter(FLAG_COLOR.construct.lab,...r).splice(0,n).forEach(e=>{i(e,STRUCTURE_LAB)}),!this.storage&&CONTROLLER_STRUCTURES[STRUCTURE_STORAGE][t]>0&&FlagDir.filter(FLAG_COLOR.construct.storage,...r).splice(0,1).forEach(e=>{i(e,STRUCTURE_STORAGE)}),!this.terminal&&CONTROLLER_STRUCTURES[STRUCTURE_TERMINAL][t]>0&&FlagDir.filter(FLAG_COLOR.construct.terminal,...r).splice(0,1).forEach(e=>{i(e,STRUCTURE_TERMINAL)}),!this.structures.observer&&CONTROLLER_STRUCTURES[STRUCTURE_OBSERVER][t]>0&&FlagDir.filter(FLAG_COLOR.construct.observer,...r).splice(0,1).forEach(e=>{i(e,STRUCTURE_OBSERVER)}),!this.structures.nuker&&CONTROLLER_STRUCTURES[STRUCTURE_NUKER][t]>0&&FlagDir.filter(FLAG_COLOR.construct.nuker,...r).splice(0,1).forEach(e=>{i(e,STRUCTURE_NUKER)}),!this.structures.powerSpawn&&CONTROLLER_STRUCTURES[STRUCTURE_POWER_SPAWN][t]>0&&FlagDir.filter(FLAG_COLOR.construct.powerSpawn,...r).splice(0,1).forEach(e=>{i(e,STRUCTURE_POWER_SPAWN)}),CONTROLLER_STRUCTURES[STRUCTURE_EXTRACTOR][t]>0){const[e]=this.find(FIND_MINERALS),t=e.pos.lookFor(LOOK_STRUCTURES);if(t.length&&t[0]instanceof StructureExtractor)return;i(e.pos,STRUCTURE_EXTRACTOR)}}}},Room.prototype.updateResourceOrders=function(){let e=this.memory.resources;if(this.my&&e){this.controller.level;for(let t in e)for(let o=0;o<e[t].length;o++){let r=e[t][o];if((t!=STRUCTURE_LAB||r.reactionState==LAB_IDLE)&&r.orders)for(let i=0;i<r.orders.length;i++){let e=r.orders[i];if(e.orderRemaining<=0){let o=0,i=this.controller.level;t==STRUCTURE_STORAGE?o=e.type==RESOURCE_ENERGY?MIN_STORAGE_ENERGY[i]:MAX_STORAGE_MINERAL:t==STRUCTURE_TERMINAL&&(o=e.type==RESOURCE_ENERGY?TERMINAL_ENERGY:0),o+=e.storeAmount;let n=0,s=Game.getObjectById(r.id);if(s)switch(t){case STRUCTURE_LAB:e.type==s.mineralType?n=s.mineralAmount:e.type==RESOURCE_ENERGY&&(n=s.energy);break;case STRUCTURE_POWER_SPAWN:e.type==RESOURCE_POWER?n=s.power:e.type==RESOURCE_ENERGY&&(n=s.energy);break;default:n=s.store[e.type]||0}n<=o&&(e.orderAmount=0,e.orderRemaining=0)}}}}},Room.prototype.updateRoomOrders=function(){if(this.memory.resources&&this.memory.resources.orders){let e=_.filter(Game.rooms,e=>{return e.my&&e.storage&&e.terminal&&e.name!==this.name}),t=this.memory.resources.orders;for(let o=0;o<t.length;o++){let r=t[o],i=r.amount;for(let n=0;n<r.offers.length;n++){let e=r.offers[n];if(Memory.rooms[e.room]&&Memory.rooms[e.room].resources&&Memory.rooms[e.room].resources.offers){let t=Memory.rooms[e.room].resources.offers,o=t.indexOf(e=>{return e.room==this.name&&e.id==r.id&&e.type==r.type});o!==-1&&t.splice(o,1)}}if(r.offers=[],i<=0)delete t[o],t.splice(o--,1);else{e.sort((e,t)=>{return Game.map.getRoomLinearDistance(this.name,e.name,!0)-Game.map.getRoomLinearDistance(this.name,t.name,!0)});for(let t=0;t<e.length;t++){let o=e[t];void 0===o.memory.resources&&(o.memory.resources={lab:[],container:[],terminal:[],storage:[],powerSpawn:[]});let n=(o.storage.store[r.type]||0)+(o.terminal.store[r.type]||0);if(!(n<100)){n=Math.min(n,i),o.memory.resources.offers||(o.memory.resources.offers=[]);let e=r.offers.find(e=>e.room==o.name),t=o.memory.resources.offers,s=t.find(e=>{return e.room==this.name&&e.id==r.id&&e.type==r.type});if(e?(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,remoteRoom:o.name,actionName:"updateRoomOrders",subAction:"update",orderId:r.id,resourceType:r.type,amount:n}),i-=n-e.amount,e.amount=n):(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,remoteRoom:o.name,actionName:"updateRoomOrders",subAction:"new",orderId:r.id,resourceType:r.type,amount:n}),global.DEBUG&&logSystem(this.name,`Room offer from ${o.name} with id ${r.id} placed for ${n} ${r.type}.`),i-=n,r.offers.push({room:o.name,amount:n})),s?s.amount=n:t.push({room:this.name,id:r.id,type:r.type,amount:n}),i<=0)break}}}}}},Room.prototype.fillARoomOrder=function(){if(!(this.terminal&&this.memory&&this.memory.resources&&this.memory.resources.offers))return!1;let e=this.memory.resources.offers;for(let t=0;t<e.length;t++){let o=e[t],r=Game.rooms[o.room];if(r&&r.memory&&r.memory.resources&&r.memory.resources.orders){let i=r.memory.resources.orders.find(e=>{return e.id==o.id&&e.type==o.type});if(i){let n=i.offers.findIndex(e=>{return e.room==this.name});if(n!=-1){let s=this.terminal.store[o.type]||0,a=0,c=null;this.memory.resources.terminal[0]&&(c=this.memory.resources.terminal[0].orders.find(e=>{return e.type==o.type})),c&&(a=c.orderRemaining);let m=Math.max(o.amount,100);if(m>s+a){let e=m-(s+a);global.DEBUG&&global.TRACE&&trace("Room",{actionName:"fillARoomOrder",subAction:"terminalOrder",roomName:this.name,targetRoomName:r.name,resourceType:o.type,amount:e}),this.placeOrder(this.terminal.id,o.type,e)}if(r.terminal){let a=r.terminal.storeCapacity-r.terminal.sum;m=Math.min(m,a,s);let c=Game.market.calcTransactionCost(m,this.name,r.name);if(o.type==RESOURCE_ENERGY&&(m-=c,c+=m),!(c>(this.terminal.store.energy||0)||m<100)){let s=this.terminal.send(o.type,m,r.name,i.id);if(s==OK)return global.DEBUG&&global.TRACE&&trace("Room",{actionName:"fillARoomOrder",roomName:this.name,targetRoomName:r.name,resourceType:o.type,amount:m}),global.DEBUG&&logSystem(this.name,`Room order filled to ${r.name} for ${m} ${o.type}.`),o.amount-=m,o.amount>0?i.offers[n].amount=o.amount:(delete i.offers[n],i.offers.splice(n,1),delete e[t],e.splice(t--,1)),i.amount-=m,!0}}}else logSystem(this.name,"Orphaned offer found and deleted"),e.splice(t--,1)}}}return!1},Room.prototype.terminalBroker=function(){if(this.my&&this.terminal&&this.storage){let e=this,t=this.mineralType,o=!1,r=this.terminal.sum/this.terminal.storeCapacity>.8;if(this.terminal.store[t]>=MIN_MINERAL_SELL_AMOUNT){let i=Game.market.getAllOrders(o=>{return!(!o.roomName||o.resourceType!=t||"buy"!=o.type||o.amount<MIN_MINERAL_SELL_AMOUNT)&&(o.range=Game.map.getRoomLinearDistance(o.roomName,e.name,!0),o.transactionAmount=Math.min(o.amount,e.terminal.store[t]),o.transactionCost=Game.market.calcTransactionCost(o.transactionAmount,e.name,o.roomName),o.transactionCost>e.terminal.store.energy&&o.transactionAmount>MIN_MINERAL_SELL_AMOUNT&&(o.transactionAmount=MIN_MINERAL_SELL_AMOUNT,o.transactionCost=Game.market.calcTransactionCost(o.transactionAmount,e.name,o.roomName)),o.credits=o.transactionAmount*o.price,o.ratio=(o.credits-o.transactionCost*ENERGY_VALUE_CREDITS)/o.transactionAmount,(r||o.ratio>=MIN_SELL_RATIO[t])&&o.transactionCost<=e.terminal.store.energy)});if(i.length>0){let r=_.max(i,"ratio"),n=Game.market.deal(r.id,r.transactionAmount,e.name);(global.DEBUG||SELL_NOTIFICATION)&&logSystem(e.name,`Selling ${r.transactionAmount} ${t} for ${r.credits} (${r.price} ¢/${t}, ${r.transactionCost} e): ${translateErrorCode(n)}`),SELL_NOTIFICATION&&Game.notify(`<h2>Room ${e.name} executed an order!</h2><br/>Result: ${translateErrorCode(n)}<br/>Details:<br/>${JSON.stringify(r).replace(",",",<br/>")}`),o=n==OK}}if(8==this.controller.level&&!o&&this.storage.charge>.8&&(this.terminal.store[t]||0)<15e4&&this.terminal.store.energy>55e3){let t=e=>e.my&&e.storage&&e.terminal&&e.terminal.sum<e.terminal.storeCapacity-5e4&&e.storage.sum<.6*e.storage.storeCapacity&&!e._isReceivingEnergy,r=_.min(_.filter(Game.rooms,t),"storage.store.energy");if(r instanceof Room&&Game.market.calcTransactionCost(5e4,this.name,r.name)<this.terminal.store.energy-5e4){r._isReceivingEnergy=!0;let t=this.terminal.send("energy",5e4,r.name,"have fun");global.DEBUG&&logSystem(e.name,`Transferring 50k energy to ${r.name}: ${translateErrorCode(t)}`),o=t==OK}}o||(o=this.fillARoomOrder())}},Room.prototype.processInvaders=function(){let e=this;void 0===this.memory.hostileIds&&(this.memory.hostileIds=[]),SEND_STATISTIC_REPORTS?void 0===this.memory.statistics&&(this.memory.statistics={}):delete this.memory.statistics;let t=t=>{if(!Room.isCenterNineRoom(this.name)&&!e.memory.hostileIds.includes(t.id)&&(e.memory.hostileIds.push(t.id),e.newInvader.push(t),SEND_STATISTIC_REPORTS)){let o=JSON.stringify(_.countBy(t.body,"type"));void 0===e.memory.statistics.invaders&&(e.memory.statistics.invaders=[]),e.memory.statistics.invaders.push({owner:t.owner.username,id:t.id,body:o,enter:Game.time,time:Date.now()})}};_.forEach(this.hostiles,t);let o=t=>{const o=Game.getObjectById(t),r=!o||Task.reputation.hostileOwner(o);if(!e.hostileIds.includes(t)&&!r&&(e.goneInvader.push(t),SEND_STATISTIC_REPORTS&&e.memory.statistics&&void 0!==e.memory.statistics.invaders&&e.memory.statistics.invaders.length>0)){let o=e=>e.id==t&&void 0===e.leave,r=_.find(e.memory.statistics.invaders,o);void 0!=r&&(r.leave=Game.time)}};_.forEach(this.memory.hostileIds,o),this.memory.hostileIds=this.hostileIds},Room.prototype.processPower=function(){let e=this.find(FIND_MY_STRUCTURES,{filter:e=>{return e.structureType==STRUCTURE_POWER_SPAWN}});for(var t=0;t<e.length;t++){let o=e[t];o.energy>=POWER_SPAWN_ENERGY_RATIO&&o.power>=1&&(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"processPower"}),o.processPower())}},Room.prototype.findContainerWith=function(e,t){t||(t=1);let o=this.memory;if(o&&o.container&&o.container.length>0)for(let r=0;r<o.container.length;r++){let i=o.container[r],n=Game.getObjectById(i.id);if(n){let o=-n.getNeeds(e);if((!this.structures.container.out.includes(n)||e!==RESOURCE_ENERGY)&&o>0){let e=o;if(e>=t)return{structure:n,amount:e}}}}return null},Room.prototype.prepareResourceOrder=function(e,t,o){let r=Game.getObjectById(e);if(!this.my||!r||!r.room.name==this.name||r.structureType!=STRUCTURE_LAB&&r.structureType!=STRUCTURE_POWER_SPAWN&&r.structureType!=STRUCTURE_CONTAINER&&r.structureType!=STRUCTURE_STORAGE&&r.structureType!=STRUCTURE_TERMINAL)return ERR_INVALID_TARGET;if(!RESOURCES_ALL.includes(t))return ERR_INVALID_ARGS;if(void 0===this.memory.resources&&(this.memory.resources={lab:[],powerSpawn:[],container:[],terminal:[],storage:[]}),void 0===this.memory.resources.powerSpawn&&(this.memory.resources.powerSpawn=[]),this.memory.resources[r.structureType].find(t=>t.id==e)||this.memory.resources[r.structureType].push(r.structureType==STRUCTURE_LAB?{id:e,orders:[],reactionState:LAB_IDLE}:{id:e,orders:[]}),r.structureType==STRUCTURE_LAB&&t!=RESOURCE_ENERGY&&o>0){let o=this.memory.resources[STRUCTURE_LAB].find(t=>t.id==e).orders;for(let r=0;r<o.length;r++)o[r].type!=t&&o[r].type!=RESOURCE_ENERGY&&(o[r].orderAmount=0,o[r].orderRemaining=0,o[r].storeAmount=0)}return OK},Room.prototype.cancelOrder=function(e,t=null){let o=Game.getObjectById(e);if(this.prepareResourceOrder(e,RESOURCE_ENERGY,0)!=OK)return ret;let r=this.memory.resources[o.structureType].find(t=>t.id==e);if(r)if(t){let e=r.orders.find(e=>e.type==t);e&&(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"cancelOrder",orderId:orderId,resourceType:t}),r.orders.splice(r.orders.indexOf(e),1))}else global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"cancelOrder",orderId:orderId,resourceType:"all"}),r.orders=[];return OK},Room.prototype.placeOrder=function(e,t,o){let r=Game.getObjectById(e),i=this.prepareResourceOrder(e,t,o);if(i!=OK)return i;let n=this.memory.resources[r.structureType].find(t=>t.id==e);if(n){let e=n.orders.find(e=>e.type==t);if(e)e.orderAmount+=o,e.orderRemaining+=o;else{let e=0;e=r.structureType===STRUCTURE_LAB?r.mineralType==t?r.mineralAmount:0:r.store[t]||0,n.orders.push({type:t,orderAmount:o,orderRemaining:o-e,storeAmount:0}),r.structureType===STRUCTURE_LAB&&(n.reactionType=t)}}return OK},Room.prototype.setStore=function(e,t,o){let r=Game.getObjectById(e),i=this.prepareResourceOrder(e,t,o);if(i!=OK)return i;let n=this.memory.resources[r.structureType].find(t=>t.id==e);if(n){let e=n.orders.find(e=>e.type==t);e?e.storeAmount=o:n.orders.push({type:t,orderAmount:0,orderRemaining:0,storeAmount:o})}return OK},Room.prototype.cancelRoomOrder=function(e=null,t=null){void 0===this.memory.resources&&(this.memory.resources={lab:[],container:[],terminal:[],storage:[]}),void 0===this.memory.resources.powerSpawn&&(this.memory.resources.powerSpawn=[]),void 0===this.memory.resources.orders&&(this.memory.resources.orders=[]);let o=this.memory.resources.orders;if(e&&t){let r=o.find(o=>{return o.id==e&&o.type==t});r&&(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"cancelRoomOrder",orderId:e,resourceType:t}),o.splice(o.indexOf(r),1))}else if(e){global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"cancelRoomOrder",orderId:e,resourceType:"all"});for(let t=0;t<o.length;t++){let r=o[t];r.id===e&&o.splice(t--,1)}}else this.memory.resources.orders=[];return OK},Room.prototype.placeRoomOrder=function(e,t,o){if(o<=0)return OK;void 0===this.memory.resources&&(this.memory.resources={lab:[],container:[],terminal:[],storage:[]}),void 0===this.memory.resources.powerSpawn&&(this.memory.resources.powerSpawn=[]),void 0===this.memory.resources.orders&&(this.memory.resources.orders=[]);let r=this.memory.resources.orders,i=r.find(o=>{return o.id==e&&o.type==t});return i?(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"placeRoomOrder",subAction:"update",orderId:e,resourceType:t,amount:o}),i.amount=o):(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"placeRoomOrder",subAction:"new",orderId:e,resourceType:t,amount:o}),global.DEBUG&&logSystem(this.name,`New room order with id ${e} placed for ${o} ${t}.`),r.push({id:e,type:t,amount:o,offers:[]})),OK},Room.prototype.isWalkable=function(e,t,o){o=o?o[t][e]:this.lookAt(e,t);let r=e=>{return e.type==LOOK_TERRAIN&&"wall"==e.terrain||OBSTACLE_OBJECT_TYPES.includes(e[e.type].structureType)};return 0==o.filter(r).length},Room.prototype.exits=function(e,t){t===!0&&(t=.5);let o;o=0===e?_.chain(this.find(FIND_STRUCTURES)).filter(function(e){return e.structureType===STRUCTURE_PORTAL}).map("pos").value():this.find(e);let r,i,n={},s=-1;const a=[];for(let c=0;c<o.length;c++){const e=o[c];_.get(n,[e.x-1,e.y])||_.get(n,[e.x,e.y-1])||(t&&s!==-1&&(a[s].x+=Math.ceil(t*(r-a[s].x)),a[s].y+=Math.ceil(t*(i-a[s].y))),s++,a[s]=_.pick(e,["x","y"]),r=e.x,i=e.y,n={}),_.set(n,[e.x,e.y],!0),r=Math.max(r,e.x),i=Math.max(i,e.y)}return t&&s!==-1&&(a[s].x+=Math.ceil(t*(r-a[s].x)),a[s].y+=Math.ceil(t*(i-a[s].y))),a},Room.prototype.showCostMatrix=function(e,t){const o=this[e]||this.structureMatrix,r=new RoomVisual(this.name);let i=0,n=50,s=0,a=50;t&&(i=Math.max(0,t.y-3),n=Math.min(50,t.y+4),s=Math.max(0,t.x-3),a=Math.min(50,t.x+4));const c=_.max(o._bits),m=e=>{const t=(120*(1-e)).toString(10);return`hsl(${t}, 100%, 50%)`};for(var u=i;u<n;u++)for(var l=s;l<a;l++){const e=o.get(l,u);e&&r.text(e,l,u),r.rect(l-.5,u-.5,1,1,{fill:m(e/c)})}},Room.prototype.getAvoidMatrix=function(e){const t=this.structureMatrix.clone();for(const o in e){const r=e[o];for(const i of r)for(let n=Math.max(0,i.pos.x-3);n<=Math.min(49,i.pos.x+3);n++){const e=n<i.pos.x?i.pos.x-n:n-i.pos.x;for(let o=Math.max(0,i.pos.y-3);o<=Math.min(49,i.pos.y+3);o++){const r=o<i.pos.y?i.pos.y-o:o-i.pos.y,s=17-2*Math.max(e,r);t.set(n,o,s)}}}return t},Room.prototype.invalidateCostMatrix=function(){Room.costMatrixInvalid.trigger(this.name)}},t.flush=function(){for(const e of Object.keys(Room._ext))Room._ext[e].flush&&Room._ext[e].flush();let t=e=>{delete e._sourceEnergyAvailable,delete e._droppedResources,delete e._ticksToNextRegeneration,delete e._relativeEnergyAvailable,delete e._towerFreeCapacity,delete e._hostiles,delete e._hostileIds,delete e._situation,delete e._casualties,delete e._currentCostMatrix,delete e._isReceivingEnergy,delete e._reservedSpawnEnergy,delete e._creeps,delete e._immobileCreeps,delete e._allCreeps,delete e._privateerMaxWeight,delete e._claimerMaxWeight,delete e._combatCreeps,delete e._defenseLevel,delete e._hostileThreatLevel,delete e._collapsed,delete e._feedable,global.isNewServer?(delete e._my,delete e._constructionSites,delete e._myConstructionSites,delete e._maxPerJob,delete e._minerals,delete e._structures):(delete e.structures._repairable,delete e.structures._urgentRepairableSites,delete e.structures._fortifyableSites,delete e.structures._fuelables),e._powerBank||delete e.memory.powerBank,e.newInvader=[],e.goneInvader=[]};if(_.forEach(Game.rooms,t),!_.isUndefined(Memory.rooms.hostileRooms)){for(const e in Memory.rooms.hostileRooms)_.isUndefined(Memory.rooms[e])&&(Memory.rooms[e]={}),Memory.rooms[e].hostile=Memory.rooms.hostileRooms[e];delete Memory.rooms.hostileRooms}},t.totalSitesChanged=function(){const e=_.size(Game.constructionSites),t=Memory.rooms.myTotalSites||0;return e>0?Memory.rooms.myTotalSites=e:delete Memory.rooms.myTotalSites,t&&t!==e},t.totalStructuresChanged=function(){const e=_.size(Game.structures),t=Memory.rooms.myTotalStructures||0;return e>0?Memory.rooms.myTotalStructures=e:delete Memory.rooms.myTotalStructures,t&&t!==e},t.needMemoryResync=function(e){return!e.memory.initialized||Game.time%global.MEMORY_RESYNC_INTERVAL===0||"sim"==e.name},t.analyze=function(){const e=Util.startProfiling("Room.analyze",{enabled:PROFILING.ROOMS});for(const t of Object.keys(Room._ext))Room._ext[t].analyze&&Room._ext[t].analyze();const o=Room.totalSitesChanged(),r=Room.totalStructuresChanged(),i=e=>{try{for(const t of Object.keys(Room._ext))Room._ext[t].analyzeRoom&&Room._ext[t].analyzeRoom(e);Room.needMemoryResync(e)&&(e.memory.initialized=Game.time,e.saveMinerals(),e.saveTowers(),e.saveSpawns(),e.saveNukers(),e.savePowerSpawns(),e.saveExtensions(),e.saveContainers(),e.saveLinks(),e.processConstructionFlags()),Game.time%PROCESS_ORDERS_INTERVAL!==0&&"sim"!==e.name||(e.updateResourceOrders(),e.updateRoomOrders(),e.terminalBroker()),e.roadConstruction(),e.structures.links.all.length>0&&e.linkDispatcher(),e.hostiles.length>0&&e.processInvaders(),e.structures.powerSpawn&&e.processPower(),o&&e.countMySites(),r&&e.countMyStructures()}catch(t){Game.notify('Error in room.js (Room.prototype.loop) for "'+e.name+'" : '+t.stack?t+"<br/>"+t.stack:t),console.log(dye(CRAYON.error,'Error in room.js (Room.prototype.loop) for "'+e.name+'": <br/>'+(t.stack||t.toString())+"<br/>"+t.stack))}};_.forEach(Game.rooms,t=>{i(t),e.checkCPU(t.name,PROFILING.ANALYZE_LIMIT/5)})},t.execute=function(){const e=Util.startProfiling("Room.execute",{enabled:PROFILING.ROOMS});for(const t of Object.keys(Room._ext))Room._ext[t].execute&&Room._ext[t].execute();let o=e=>{let t=JSON.stringify(_.countBy(e.body,"type"));(global.DEBUG||NOTIFICATE_INVADER||NOTIFICATE_INTRUDER&&e.room.my||NOTIFICATE_HOSTILES)&&logSystem(e.pos.roomName,`Hostile intruder (${t}) from "${e.owner.username}".`),(NOTIFICATE_INVADER||NOTIFICATE_INTRUDER&&"Invader"!==e.owner.username&&e.room.my||NOTIFICATE_HOSTILES&&"Invader"!==e.owner.username)&&Game.notify(`Hostile intruder ${e.id} (${t}) from "${e.owner.username}" in room ${e.pos.roomName} at ${toDateTimeString(toLocalDate(new Date))}`),Room.newInvader.trigger(e)},r=e=>Room.knownInvader.trigger(e),i=e=>Room.goneInvader.trigger(e),n=(e,t)=>{try{for(const n of Object.keys(Room._ext))Room._ext[n].executeRoom&&Room._ext[n].executeRoom(t);const s=Util.startProfiling(t,{enabled:PROFILING.ROOMS});let a=Game.rooms[t];a?(a.goneInvader.forEach(i),s.checkCPU("Creep.execute.run:goneInvader",.5),a.hostileIds.forEach(r),s.checkCPU("Creep.execute.run:knownInvaders",.5),a.newInvader.forEach(o),s.checkCPU("Creep.execute.run:newInvaders",.5),a.structures.towers.length>0&&Tower.loop(a),s.checkCPU("Creep.execute.run:tower.loop",.5),a.collapsed&&Room.collapsed.trigger(a),s.checkCPU("Creep.execute.run:collapsed",.5)):(e.hostileIds&&_.forEach(e.hostileIds,r),s.checkCPU("Creep.execute.run:knownInvadersNoSight",.5))}catch(e){Util.logError(e.stack||e.message)}};_.forEach(Memory.rooms,(t,o)=>{n(t,o),e.checkCPU(o+".run",1)})},t.cleanup=function(){for(const e of Object.keys(Room._ext))Room._ext[e].cleanup&&Room._ext[e].cleanup();if(_.isUndefined(Memory.pathfinder)||(OCSMemory.saveSegment(MEM_SEGMENTS.COSTMATRIX_CACHE,Memory.pathfinder),delete Memory.pathfinder),Room.pathfinderCacheDirty&&Room.pathfinderCacheLoaded){let e={};for(const t in Room.pathfinderCache){const o=Room.pathfinderCache[t];o.version===Room.COSTMATRIX_CACHE_VERSION&&(e[t]={serializedMatrix:o.serializedMatrix||o.costMatrix.serialize(),updated:o.updated,version:o.version})}OCSMemory.saveSegment(MEM_SEGMENTS.COSTMATRIX_CACHE,e),Room.pathfinderCacheDirty=!1}},t.bestSpawnRoomFor=function(e){var t=t=>t.my?routeRange(t.name,e):1/0;return _.min(Game.rooms,t)},t.findSpawnRoom=function(e){if(!e||!e.targetRoom)return null;let t=t=>t.my&&(void 0===e.maxRange||Util.routeRange(t.name,e.targetRoom)<=e.maxRange)&&(void 0===e.minEnergyCapacity||e.minEnergyCapacity<=t.energyCapacityAvailable)&&(void 0===e.minEnergyAvailable||e.minEnergyAvailable<=t.energyAvailable)&&(t.name!=e.targetRoom||e.allowTargetRoom===!0)&&(void 0===e.minRCL||t.controller.level>=e.minRCL)&&(void 0===e.callBack||e.callBack(t)),o=_.filter(Game.rooms,t);if(0==o.length)return null;let r=e=>_.sum(e,e=>3*e.parts.length),i=e=>(.9*r(e.spawnQueueLow)+r(e.spawnQueueMedium)+1.1*r(e.spawnQueueHigh))/e.structures.spawns.length,n=t=>{return routeRange(t.name,e.targetRoom)+(8-t.controller.level)/(e.rangeRclRatio||3)+i(t)/(e.rangeQueueRatio||51)};return _.min(o,n)},t.routeCallback=function(e,o,r){return(_.isUndefined(e)||_.isUndefined(o))&&logError("Room.routeCallback","both origin and destination must be defined - origin:"+e+" destination:"+o),function(i){if(Game.map.getRoomLinearDistance(e,i)>r.restrictDistance)return!1;if(i!==o&&ROUTE_ROOM_COST[i])return ROUTE_ROOM_COST[i];let n=!1;if(r.preferHighway){const e=/^[WE]([0-9]+)[NS]([0-9]+)$/.exec(i);n=e[1]%10===0||e[2]%10===0}let s=!1;const a=_.get(Memory.rooms[i],"hostile",!1);if(r.checkOwner){const e=Game.rooms[i];s=!a||e&&e.controller&&(e.controller.my||void 0===e.controller.owner)}return!r.allowSK&&t.isSKRoom(i)?10:!r.allowHostile&&a&&i!==o&&i!==e?Number.POSITIVE_INFINITY:s||i==e||i==o?1:n?3:Game.map.isRoomAvailable(i)?r.checkOwner||r.preferHighway?11:1:Number.POSITIVE_INFINITY}},t.getCostMatrix=function(e){var t=Game.rooms[e];if(t)return t.costMatrix},t.isMine=function(e){let t=Game.rooms[e];return t&&t.my},t.calcCardinalDirection=function(e){const t=/^([WE])[0-9]+([NS])[0-9]+$/.exec(e);return[t[1],t[2]]},t.calcGlobalCoordinates=function(e,t){if(!t)return null;const o=/^[WE]([0-9]+)[NS]([0-9]+)$/.exec(e),r=+o[1],i=+o[2];return t(r,i)},t.calcCoordinates=function(e,t){return t?Room.calcGlobalCoordinates(e,(e,o)=>{return t(e%10,o%10)}):null},t.isCenterRoom=function(e){return Room.calcCoordinates(e,(e,t)=>{return 5===e&&5===t})},t.isCenterNineRoom=function(e){return Room.calcCoordinates(e,(e,t)=>{return e>3&&e<7&&t>3&&t<7})},t.isControllerRoom=function(e){return Room.calcCoordinates(e,(e,t)=>{return 0!==e&&0!==t&&(e<4||e>6||t<4||t>6)})},t.isSKRoom=function(e){return Room.calcCoordinates(e,(e,t)=>{return e>3&&e<7&&t>3&&t<7&&(5!==e||5!==t)})},t.isHighwayRoom=function(e){return Room.calcCoordinates(e,(e,t)=>{return 0===e||0===t})},t.adjacentRooms=function(e){let t=e.split(/([NESW])/),o=["N","E","S","W"],r=e=>o[(o.indexOf(e)+2)%4],i=[];for(let n=parseInt(t[2])-1;n<parseInt(t[2])+2;n++)for(let s=parseInt(t[4])-1;s<parseInt(t[4])+2;s++)i.push((n<0?r(t[1])+"0":t[1]+n)+(s<0?r(t[3])+"0":t[3]+s));return i},t.adjacentAccessibleRooms=function(e,t=true){let o=[],r=Game.map.describeExits(e),i=(e,r)=>{if(t){let t=Game.map.describeExits(e),i=(r+1)%8+1,n=(r+5)%8+1;t&&t[i]&&!o.includes(t[i])&&o.push(t[i]),t&&t[n]&&!o.includes(t[n])&&o.push(t[n])}o.push(e)};return _.forEach(r,i),o},t.roomDistance=function(e,t,o,r){if(o)return Game.map.getRoomLinearDistance(e,t,r);if(e==t)return 0;let i=e.split(/([NESW])/),n=t.split(/([NESW])/),s=i[1]==n[1]?Math.abs(i[2]-n[2]):i[2]+n[2]+1,a=i[3]==n[3]?Math.abs(i[4]-n[4]):i[4]+n[4]+1;return s+a},t.rebuildCostMatrix=function(e){global.DEBUG&&logSystem(e,"Removing invalid costmatrix to force a rebuild."),Room.pathfinderCache[e]={},Room.pathfinderCacheDirty=!0},t.loadCostMatrixCache=function(e){let t=0;for(const o in e)(!Room.pathfinderCache[o]||Room.pathfinderCache[o].updated<e[o].updated)&&(t++,Room.pathfinderCache[o]=e[o]);global.DEBUG&&t>0&&logSystem("RawMemory","loading pathfinder cache.. updated "+t+" stale entries."),Room.pathfinderCacheLoaded=!0},t.validFields=function(e,t,o,r,i,n=false,s=null){const a=Game.rooms[e],c=n?a.lookAtArea(r,t,i,o):null;let m=[];for(let u=t;u<=o;u++)for(let l=r;l<=i;l++)if(u>1&&u<48&&l>1&&l<48&&(!n||a.isWalkable(u,l,c))){let t=new RoomPosition(u,l,e);s&&!s(t)||m.push(t)}return m},t.fieldsInRange=function(e){let t=e.spots.map(e=>e.pos.x+e.range),o=e.spots.map(e=>e.pos.y+e.range),r=e.spots.map(e=>e.pos.x-e.range),i=e.spots.map(e=>e.pos.y-e.range),n=Math.max(...r),s=Math.min(...t),a=Math.max(...i),c=Math.min(...o);return Room.validFields(e.roomName,n,s,a,c,e.checkWalkable,e.where)},t.roomLayoutArrayt.roomLayout=function(e){if(Flag.compare(e,FLAG_COLOR.command.roomLayout)){e=Game.flags[e.name];const t=e.room;if(t){const o=Room.roomLayoutArray,r={[STRUCTURE_SPAWN]:FLAG_COLOR.construct.spawn,[STRUCTURE_TOWER]:FLAG_COLOR.construct.tower,[STRUCTURE_EXTENSION]:FLAG_COLOR.construct,[STRUCTURE_LINK]:FLAG_COLOR.construct.link,[STRUCTURE_STORAGE]:FLAG_COLOR.construct.storage,[STRUCTURE_TERMINAL]:FLAG_COLOR.construct.terminal,[STRUCTURE_NUKER]:FLAG_COLOR.construct.nuker,[STRUCTURE_POWER_SPAWN]:FLAG_COLOR.construct.powerSpawn,[STRUCTURE_OBSERVER]:FLAG_COLOR.construct.observer},[i,n]=[e.pos.x,e.pos.y],s=[],a=[],c=()=>{return e.pos.newFlag(FLAG_COLOR.command.invalidPosition,"NO_ROOM"),e.remove(),!1};for(let m=0;m<o.length;m++)for(let u=0;u<o[m].length;u++){const e=Math.floor(i+(m-o.length/2)+1),l=Math.floor(n+(u-o.length/2)+1);if(e>=50||e<0||l>=50||l<0)return c();const h=t.getPositionAt(e,l),R=o[m]&&o[m][u];if(R){if("wall"===Game.map.getTerrainAt(h))return c();if(R===STRUCTURE_ROAD)a.push(h);else{const e=r[R];s.push({flagColour:e,pos:h})}}}s.forEach(e=>{e.pos.newFlag(e.flagColour)}),_.forEach(a,e=>{return!(_.size(Game.constructionSites)>=100)&&void e.createConstructionSite(STRUCTURE_ROAD)}),e.remove()}}};