// All methods require a JSDoc comment describing it.
// http://usejsdoc.org/
module.exports={getVisibleRooms(t){const e=Game.time-(t||5),o=[];for(const n in Memory.rooms){const t=Memory.rooms[n];t.lastViewed&&t.lastViewed>e&&o.push(n)}return o},formatNumber(t){return t>=1e6?(t/1e6).toFixed(2)+"M":t>=1e3?(t/1e3).toFixed(1)+"K":_.isUndefined(t)?t:t.toString()},pad(t,e="0",o=2,n=true){e||(e="0"),n&&(o-=t.toString().length);const r=_.times(o,t=>e).join("");return r+t},get(t,e,o,n=true){const r=_.get(t,e);return _.isUndefined(r)&&!_.isUndefined(o)&&n?(o=Util.fieldOrFunction(o),_.set(t,e,o),_.get(t,e)):r},set(t,e,o,n=true){return n?void Util.get(t,e,o):void _.set(t,e,o)},callIfExists(t,...e){if(t)return t(...e)},fieldOrFunction(t,...e){return"function"==typeof t?t(...e):t},isObject(t){return null!==t&&("function"==typeof t||"object"==typeof t)},translateErrorCode(t){return{0:"OK",1:"ERR_NOT_OWNER",2:"ERR_NO_PATH",3:"ERR_NAME_EXISTS",4:"ERR_BUSY",5:"ERR_NOT_FOUND",6:"ERR_NOT_ENOUGH_RESOURCES",7:"ERR_INVALID_TARGET",8:"ERR_FULL",9:"ERR_NOT_IN_RANGE",10:"ERR_INVALID_ARGS",11:"ERR_TIRED",12:"ERR_NO_BODYPART",14:"ERR_RCL_NOT_ENOUGH",15:"ERR_GCL_NOT_ENOUGH"}[t*-1]},dye(t,...e){const o=e.join(" ");if(Util.isObject(t)){let e="";const n=o=>e+=`${o}: ${t[o]};`;return _.forEach(Object.keys(t),n),`<span style="${e}">${o}</span>`}return t?`<span style="color: ${t}">${o}</span>`:o},logError(t,e){const o=Util.dye(CRAYON.error,t);e?Util.trace("error",e,o):console.log(o,Util.stack())},logErrorCode(t,e){const o=`${error}
room: ${t.pos.roomName}
creep: ${t.name}
action: ${t.data.actionName}
target: ${t.data.targetId}`;if(e){const n=Util.translateErrorCode(e);t&&t.say(n?n:e),Game.notify(o,120)}console.log(Util.dye(CRAYON.error,o),Util.stack())},logSystem(t,...e){const o=Util.dye(CRAYON.system,t);console.log(Util.dye(CRAYON.system,`<a href="/a/#!/room/${t}">${o}</a> &gt;`),...e,Util.stack())},stack(t=false,e=" "){return DEBUG_STACKS||t?new Error(`
STACK; param:${DEBUG_STACKS}, force:${t}`).stack:e},trace(t,e,...o){function n(t,e,o){const n=Memory.debugTrace[o];return Reflect.has(Memory.debugTrace,o)?!!t&&(n===e||!e&&n===`${e}`):t}function r(t){const e=Memory.debugTrace.no[t[0]];return e===!0||t[0]in Memory.debugTrace.no&&(e===t[1]||!t[1]&&e===`${t[1]}`)}if(!(Memory.debugTrace[t]!==!0&&_(e).reduce(n,1)!==!0||Memory.debugTrace.no&&_(e).pairs().some(r)===!0)){let n,r=o;if(0===o.length&&t){let o=t;do n=o,o=e[o];while(e[o]&&o!==t);o&&o!==t&&(r="string"==typeof o?[o]:[n,"=",o])}console.log(Game.time,Util.dye(CRAYON.error,t),...r,Util.dye(CRAYON.birth,JSON.stringify(e)),Util.stack())}},toLocalDate(t){t||(t=new Date);let e=TIME_ZONE;return USE_SUMMERTIME&&isSummerTime(t)&&e++,new Date(t.getTime()+36e5*e)},toDateTimeString(t){const e=Util.pad;return e(t.getFullYear(),0,4)+"-"+e(t.getMonth()+1)+"-"+e(t.getDate())+" "+Util.toTimeString(t)},toTimeString(t){const e=Util.pad;return e(t.getHours())+":"+e(t.getMinutes())+":"+e(t.getSeconds())},isSummerTime(t){return Reflect.has(Date.prototype,"stdTimezoneOffset")||(Date.prototype.stdTimezoneOffset=function(){const t=new Date(this.getFullYear(),0,1),e=new Date(this.getFullYear(),6,1);return Math.max(t.getTimezoneOffset(),e.getTimezoneOffset())}),Reflect.has(Date.prototype,"dst")||Object.defineProperty(Date.prototype,"dst",{get:function(){return this.getTimezoneOffset()<this.stdTimezoneOffset()},configurable:!0}),t.dst},addById(t,e){t||(t=[]);const o=Game.getObjectById(e);return o&&t.push(o),t},processReports(){if(!_.isUndefined(Memory.statistics)&&!_.isUndefined(Memory.statistics.reports)&&Memory.statistics.reports.length){let t;Memory.statistics.reports.length<=REPORTS_PER_LOOP?(t=Memory.statistics.reports,Memory.statistics.reports=[]):t=Memory.statistics.reports.splice(0,REPORTS_PER_LOOP),_.forEach(t,Game.notify)}},routeRange(t,e){return t===e?0:Util.get(Memory,`routeRange.${t}.${e}`,function(){const o=t instanceof Room?t:Game.rooms[t];if(!o)return Room.roomDistance(t,e,!1);const n=o.findRoute(e,!1,!1);return n?n===ERR_NO_PATH?1/0:n.length:Room.roomDistance(t,e,!1)})},pave(t){const e=_.values(Game.flags).filter(e=>e.pos.roomName===t&&e.compareTo(FLAG_COLOR.pavementArt)),o=Memory.pavementArt[t]===undefinede?"":Memory.pavementArt[t],n=t=>`x${t.pos.x}y${t.pos.y}`;Memory.pavementArt[t]=o+e.map(n).join("")+"x";const r=t=>t.pos.createConstructionSite(STRUCTURE_WALL);e.forEach(r);e.forEach(remove)},unpave(t){if(!Memory.pavementArt||!Memory.pavementArt[t])return!1;const e=Game.rooms[t];if(!e)return!1;const o=e=>Memory.pavementArt[t].indexOf(`x${e.pos.x}y${e.pos.y}x`)>=0,n=e.structures.all.filter(o),r=t=>t.destroy();return n&&n.forEach(r),delete Memory.pavementArt[t],!0},guid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,t=>{const e=16*Math.random()|0,o="x"===t?e:3&e|8;return o.toString(16)})},inQueue(t){return!!t&&(t.link&&(t={behaviour:t}),!!(t.name||t.behaviour||t.setup)&&_(Game.rooms).filter("my").map("memory").map(t=>t.spawnQueueHigh.concat(t.spawnQueueMedium,t.spawnQueueLow)).flatten().some(e=>{return(!t.room||!e.destiny||e.destiny.room===t.room)&&(t.behaviour?e.behaviour&&e.behaviour===t.behaviour||e.name.includes(t.behaviour):t.setup?e.setup===t.setup:void 0)}))},memoryUsage(t){let e="",o=0,n="";for(const r in t){r.length>n.length&&(n=r);const i=JSON.stringify(t[r]).length/1024;o+=i,e+=`<tr><td>${r}</td><td>${_.round(i,2)}</td></tr>`}e+=`<tr><td>Total</td><td>${_.round(o,2)}</td></tr></table>`;const i=Array(n.length+2).join(" ");return`<table><tr><th>Key${i}</th><th>Size (kb)</th></tr>`.concat(e)},resetProfiler(){Util.loadProfiler(!0)},loadProfiler(t=false){t&&(Util.logSystem("Profiler","resetting profiler data."),Memory.profiler={totalCPU:0,totalTicks:0,types:{},validTick:Game.time}),global.profiler=Memory.profiler},startProfiling(t,e={}){const o=_.get(e,"enabled",!0);let n=function(t,e,o){},r=function(){};if(PROFILE&&o){_.isUndefined(Memory.profiler)?Util.resetProfiler():(!global.profiler||global.profiler.validTick!==Memory.profiler.validTick||global.profiler.totalTicks<Memory.profiler.totalTicks)&&Util.loadProfiler();const o=e.startCPU||Game.cpu.getUsed();let i=o;PROFILE&&!PROFILING.BASIC_ONLY&&(n=function(e,o,n){const r=Game.cpu.getUsed(),s=_.round(r-i,2);(!o||s>o)&&Util.logSystem(t+":"+e,s),n&&(_.isUndefined(global.profiler.types[n])&&(global.profiler.types[n]={totalCPU:0,count:0,totalCount:0}),global.profiler.types[n].totalCPU+=s,global.profiler.types[n].count++),i=r}),r=function(){const e=Game.cpu.getUsed()-o;global.profiler.totalCPU+=e,global.profiler.totalTicks++;const n=global.profiler.totalCPU/global.profiler.totalTicks;if(PROFILE&&!PROFILING.BASIC_ONLY&&PROFILING.AVERAGE_USAGE&&_.size(global.profiler.types)>0){let t="",e="";_(global.profiler.types).map((t,e)=>{t.totalCount+=t.count;const o=_.round(t.totalCPU/t.totalCount,3),n={type:e,typeAvg:o,active:t.count,weighted:_.round(o*t.count,3),executions:t.totalCount};return t.count=0,n}).sortByOrder("weighted","desc").forEach(o=>{o.type.length>e.length&&(e=o.type),t+=`<tr><td>${o.type}</td><td>     ${o.typeAvg}</td><td>   ${o.active}</td><td>     ${o.weighted}</td><td>   ${o.executions}</td></tr>`}).value(),t+=`</table>`,Util.logSystem("Average Usage",`<table style="font-size:80%;"><tr><th>Type${Array(e.length+2).join(" ")}</th><th>(avg/creep/tick)</th><th>(active)</th><th>(weighted avg)</th><th>(executions)</th></tr>`.concat(t))}Util.logSystem(t," loop:"+_.round(e,2),"other:"+_.round(o,2),"avg:"+_.round(n,2),"ticks:"+global.profiler.totalTicks,"bucket:"+Game.cpu.bucket),PROFILE&&!PROFILING.BASIC_ONLY&&console.log("\n"),Memory.profiler=global.profiler}}return{checkCPU:n,totalCPU:r}},_resources:_.memoize(function(){return _.chain(global).pick(function(t,e){return e.startsWith("RESOURCE_")}).value()}),resources(){return this._resources()},valueOrZero(t){return t||0},chargeScale(t,e,o){if(o===e)return t>o?1/0:-(1/0);const n=1/(o-e);return(t-o)*n+1}};