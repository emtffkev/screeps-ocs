let r=new Creep.Action("storing");module.exports=r,r.isValidAction=function(r){return r.room.storage&&r.room.storage.active&&r.sum>0&&("worker"!=r.data.creepType||r.sum>r.carry.energy||(!r.room.population||null!=r.room.population.actionCount.upgrading&&r.room.population.actionCount.upgrading>=1)&&r.room.sourceEnergyAvailable>0&&r.room.storage.charge<=1)},r.isValidTarget=function(r){return r&&r.store&&r.active&&r.sum<r.storeCapacity},r.isAddableTarget=function(r,e){return r.my&&(!r.targetOf||r.targetOf.length<this.maxPerTarget)&&r.sum+e.carry[RESOURCE_ENERGY]<r.storeCapacity},r.isValidMineralToTerminal=function(r){return r.storage.store[r.mineralType]&&r.storage.store[r.mineralType]>1.05*MAX_STORAGE_MINERAL&&r.terminal.sum-r.terminal.store.energy+Math.max(r.terminal.store.energy,TERMINAL_ENERGY)<r.terminal.storeCapacity},r.newTarget=function(r){let e=r.room.mineralType,t=r=>r.carry[e]&&r.carry[e]>0&&this.isValidMineralToTerminal(r.room),a=r=>r.carry.energy>0&&r.room.storage.charge>.5&&r.room.terminal.store.energy<.95*TERMINAL_ENERGY&&r.room.terminal.sum<r.room.terminal.storeCapacity;return r.room.terminal&&r.room.terminal.active&&(t(r)||a(r))&&this.isAddableTarget(r.room.terminal,r)?r.room.terminal:this.isValidTarget(r.room.storage)&&this.isAddableTarget(r.room.storage,r)?r.room.storage:null},r.work=function(r){var e;for(var t in r.carry)if(r.carry[t]>0&&(e=r.transfer(r.target,t),e!=OK))break;return delete r.data.actionName,delete r.data.targetId,e};