let t=new Creep.Action("defending");module.exports=t,t.isValidAction=function(t){return t.room.hostiles.length>0},t.isAddableAction=function(){return!0},t.isAddableTarget=function(){return!0},t.isValidTarget=function(t){return t&&null!=t.hits&&t.hits>0&&0==t.my},t.newTarget=function(e){var n=e.pos.findClosestByRange(e.room.hostiles,{filter:e.getStrategyHandler([t.name],"priorityTargetFilter",e)});return n||(n=e.pos.findClosestByRange(e.room.hostiles,{filter:e.getStrategyHandler([t.name],"targetFilter",e)})),n},t.step=function(t){return global.CHATTY&&t.say(this.name,global.SAY_PUBLIC),t.target.pos.roomName!==t.room.name?Creep.action.travelling.assignRoom(t,t.target.pos.roomName):void this.run[t.data.creepType](t)},t.run={ranger:function(t){let e=t.pos.getRangeTo(t.target);if(!t.flee&&(e>3&&t.travelTo(t.target),e<3)){let e=t.target.pos.getDirectionTo(t);e&&t.move(e)}let n=t.pos.findInRange(t.room.hostiles,3);return n.length>2?(global.CHATTY&&t.say("MassAttack"),void(t.attackingRanged=t.rangedMassAttack()==OK)):e<4?void(t.attackingRanged=t.rangedAttack(t.target)==OK):void(n.length>0&&(t.attackingRanged=t.rangedAttack(n[0])==OK))},melee:function(t){t.flee||t.travelTo(t.target);let e=t.attack(t.target);if(e==ERR_NOT_IN_RANGE){let e=t.pos.findInRange(t.room.hostiles,1);e.length>0&&(t.attacking=t.attack(e[0])==OK)}else t.attacking=e==OK}},t.defaultStrategy.priorityTargetFilter=function(t){return function(t){return t.hasBodyparts(HEAL)}},t.defaultStrategy.targetFilter=function(t){return function(t){return!0}};