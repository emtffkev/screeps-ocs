const e=new Creep.Behaviour("worker");module.exports=e,e.inflowActions=function(e){let o=[Creep.action.bulldozing,Creep.action.picking,Creep.action.dismantling,Creep.action.withdrawing,Creep.action.uncharging,Creep.action.harvesting,Creep.action.reallocating];return e.sum>e.carry.energy&&o.unshift(Creep.action.storing),o},e.outflowActions=function(e){if(e.room.situation.invasion&&e.room.controller&&e.room.controller.level>2)return[Creep.action.fueling,Creep.action.feeding,Creep.action.repairing];{let o=[Creep.action.repairing,Creep.action.feeding,Creep.action.building,Creep.action.fueling,Creep.action.fortifying,Creep.action.charging,Creep.action.upgrading,Creep.action.storing];const n=e=>{const o=e.population&&e.population.typeCount;return!o.hauler||o.hauler<1||!o.miner||o.miner<1};return e.room.relativeEnergyAvailable<1&&n(e.room)&&o.unshift(Creep.action.feeding),e.room.controller&&e.room.controller.ticksToDowngrade<2e3&&o.unshift(Creep.action.upgrading),e.sum>e.carry.energy&&o.unshift(Creep.action.storing),o.unshift(Creep.action.bulldozing),o}},e.nextAction=function(e){return"worker"==e.data.creepType&&e.pos.roomName!=e.data.homeRoom&&Game.rooms[e.data.homeRoom]&&Game.rooms[e.data.homeRoom].controller?(global.DEBUG&&global.TRACE&&trace("Behaviour",{actionName:"travelling",behaviourName:this.name,creepName:e.name,assigned:!0,Behaviour:"nextAction",Action:"assign"}),Creep.action.travelling.assignRoom(e,e.data.homeRoom),!0):this.nextEnergyAction(e)};