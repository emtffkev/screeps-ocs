let e={};module.exports=e,e.name="remoteMiner",e.run=function(e){const t=e.data.destiny&&Game.flags[e.data.destiny.targetName];if(!(t||e.action&&"recycling"===e.action.name))return Creep.action.recycling.assign(e);if(!Creep.action.avoiding.run(e)){if(!e.action||"idle"===e.action.name){if(e.room.name===e.data.destiny.room||e.data.determinatedTarget)return void this.mine(e);this.gotoTargetRoom(e)}e.action&&e.target?e.action.step(e):logError("Creep without action/activity!\nCreep: "+e.name+"\ndata: "+JSON.stringify(e.data))}},e.mine=function(t){return Creep.behaviour.miner.run(t,{remote:!0,approach:e.approach})},e.approach=function(e){let t=new RoomPosition(e.data.determinatedSpot.x,e.data.determinatedSpot.y,e.data.destiny.room),a=e.pos.getRangeTo(t);return a>0&&(e.travelTo(t,{range:0}),a<=2&&!e.data.predictedRenewal&&(e.data.predictedRenewal=_.min([500,1500-e.ticksToLive+e.data.spawningTime]))),a},e.gotoTargetRoom=function(e){const t=e.data.destiny?Game.flags[e.data.destiny.targetName]:null;if(t)return Creep.action.travelling.assignRoom(e,t.pos.roomName)},e.strategies={defaultStrategy:{name:`default-${e.name}`}};