let e=new Creep.Action("picking");module.exports=e,e.maxPerAction=4,e.maxPerTarget=2,e.isValidAction=function(e){return e.sum<e.carryCapacity},e.isValidTarget=function(e){return null!=e&&null!=e.amount&&e.amount>0},e.isAddableAction=function(e){return e.data.creepType.indexOf("remote")>0||(this.maxPerAction===1/0||!e.room.population||!e.room.population.actionCount[this.name]||e.room.population.actionCount[this.name]<this.maxPerAction)},e.isAddableTarget=function(e,t){let n;n=t.data.creepType.indexOf("remote")>0?1/0:this.maxPerTarget;let r=e.targetOf?_.filter(e.targetOf,{actionName:"picking"}):[];return!e.targetOf||!r.length||r.length<n&&e.amount>_.sum(r.map(e=>e.carryCapacityLeft))},e.newTarget=function(t){const n=e.getStrategy("energyOnly",t)?_.filter(t.room.droppedResources,{resourceType:RESOURCE_ENERGY}):t.room.droppedResources;let r;return r=t.room.my&&t.room.situation.invasion?e=>this.isAddableTarget(e,t)&&e.pos.findInRange(t.room.sources,1).length>0:e=>this.isAddableTarget(e,t),t.pos.findClosestByPath(n,{filter:r})},e.work=function(e){var t=e.pickup(e.target);if(t==OK){if(e.sum<.8*e.carryCapacity){let n=e.pos.findInRange(e.room.droppedResources,1,{filter:t=>t.resourceType!=RESOURCE_ENERGY&&this.isAddableTarget(t,e)});if((!n||n.length<1)&&(n=e.pos.findInRange(e.room.droppedResources,1,{filter:t=>this.isAddableTarget(t,e)})),n&&n.length>0)return this.assign(e,n[0]),t}if(e.sum<e.carryCapacity){let n=e.pos.findInRange(e.room.structures.container.in,2,{filter:t=>Creep.action.uncharging.isValidTarget(t,e)});if(n&&n.length>0)return Creep.action.uncharging.assign(e,n[0]),t}delete e.data.actionName,delete e.data.targetId}return t},e.defaultStrategy.energyOnly=!0;