const e={};module.exports=e,e.analyzeRoom=function(e,r){Game.time%global.PROCESS_ORDERS_INTERVAL!==0&&"sim"!==e.name||(e.updateResourceOrders(),e.updateRoomOrders(),e.terminalBroker())},e.extend=function(){Room.prototype.updateResourceOrders=function(){let e=this.memory.resources;if(this.my&&e){this.controller.level;for(let r in e)for(let o=0;o<e[r].length;o++){let t=e[r][o];if((r!=STRUCTURE_LAB||t.reactionState==LAB_IDLE)&&t.orders)for(let n=0;n<t.orders.length;n++){let e=t.orders[n];if(e.orderRemaining<=0){let o=0,n=this.controller.level;r==STRUCTURE_STORAGE?o=e.type==RESOURCE_ENERGY?MIN_STORAGE_ENERGY[n]:MAX_STORAGE_MINERAL:r==STRUCTURE_TERMINAL&&(o=e.type==RESOURCE_ENERGY?TERMINAL_ENERGY:0),o+=e.storeAmount;let s=0,m=Game.getObjectById(t.id);if(m)switch(r){case STRUCTURE_LAB:e.type==m.mineralType?s=m.mineralAmount:e.type==RESOURCE_ENERGY&&(s=m.energy);break;case STRUCTURE_POWER_SPAWN:e.type==RESOURCE_POWER?s=m.power:e.type==RESOURCE_ENERGY&&(s=m.energy);break;default:s=m.store[e.type]||0}s<=o&&(e.orderAmount=0,e.orderRemaining=0)}}}}},Room.prototype.updateRoomOrders=function(){if(this.memory.resources&&this.memory.resources.orders){let e=_.filter(Game.rooms,e=>{return e.my&&e.storage&&e.terminal&&e.name!==this.name}),r=this.memory.resources.orders;for(let o=0;o<r.length;o++){let t=r[o],n=t.amount;for(let s=0;s<t.offers.length;s++){let e=t.offers[s];if(Memory.rooms[e.room]&&Memory.rooms[e.room].resources&&Memory.rooms[e.room].resources.offers){let r=Memory.rooms[e.room].resources.offers,o=r.indexOf(e=>{return e.room==this.name&&e.id==t.id&&e.type==t.type});o!==-1&&r.splice(o,1)}}if(t.offers=[],n<=0)delete r[o],r.splice(o--,1);else{e.sort((e,r)=>{return Game.map.getRoomLinearDistance(this.name,e.name,!0)-Game.map.getRoomLinearDistance(this.name,r.name,!0)});for(let r=0;r<e.length;r++){let o=e[r];void 0===o.memory.resources&&(o.memory.resources={lab:[],container:[],terminal:[],storage:[],powerSpawn:[]});let s=(o.storage.store[t.type]||0)+(o.terminal.store[t.type]||0);if(!(s<100)){s=Math.min(s,n),o.memory.resources.offers||(o.memory.resources.offers=[]);let e=t.offers.find(e=>e.room==o.name),r=o.memory.resources.offers,m=r.find(e=>{return e.room==this.name&&e.id==t.id&&e.type==t.type});if(e?(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,remoteRoom:o.name,actionName:"updateRoomOrders",subAction:"update",orderId:t.id,resourceType:t.type,amount:s}),n-=s-e.amount,e.amount=s):(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,remoteRoom:o.name,actionName:"updateRoomOrders",subAction:"new",orderId:t.id,resourceType:t.type,amount:s}),global.DEBUG&&logSystem(this.name,`Room offer from ${o.name} with id ${t.id} placed for ${s} ${t.type}.`),n-=s,t.offers.push({room:o.name,amount:s})),m?m.amount=s:r.push({room:this.name,id:t.id,type:t.type,amount:s}),n<=0)break}}}}}},Room.prototype.fillARoomOrder=function(){if(!(this.terminal&&this.memory&&this.memory.resources&&this.memory.resources.offers))return!1;let e=this.memory.resources.offers;for(let r=0;r<e.length;r++){let o=e[r],t=Game.rooms[o.room];if(t&&t.memory&&t.memory.resources&&t.memory.resources.orders){let n=t.memory.resources.orders.find(e=>{return e.id==o.id&&e.type==o.type});if(n){let s=n.offers.findIndex(e=>{return e.room==this.name});if(s!=-1){let m=this.terminal.store[o.type]||0,a=0,i=null;this.memory.resources.terminal[0]&&(i=this.memory.resources.terminal[0].orders.find(e=>{return e.type==o.type})),i&&(a=i.orderRemaining);let u=Math.max(o.amount,100);if(u>m+a){let e=u-(m+a);global.DEBUG&&global.TRACE&&trace("Room",{actionName:"fillARoomOrder",subAction:"terminalOrder",roomName:this.name,targetRoomName:t.name,resourceType:o.type,amount:e}),this.placeOrder(this.terminal.id,o.type,e)}if(t.terminal){let a=t.terminal.storeCapacity-t.terminal.sum;u=Math.min(u,a,m);let i=Game.market.calcTransactionCost(u,this.name,t.name);if(o.type==RESOURCE_ENERGY&&(u-=i,i+=u),!(i>(this.terminal.store.energy||0)||u<100)){let m=this.terminal.send(o.type,u,t.name,n.id);if(m==OK)return global.DEBUG&&global.TRACE&&trace("Room",{actionName:"fillARoomOrder",roomName:this.name,targetRoomName:t.name,resourceType:o.type,amount:u}),global.DEBUG&&logSystem(this.name,`Room order filled to ${t.name} for ${u} ${o.type}.`),o.amount-=u,o.amount>0?n.offers[s].amount=o.amount:(delete n.offers[s],n.offers.splice(s,1),delete e[r],e.splice(r--,1)),n.amount-=u,!0}}}else logSystem(this.name,"Orphaned offer found and deleted"),e.splice(r--,1)}}}return!1},Room.prototype.prepareResourceOrder=function(e,r,o){let t=Game.getObjectById(e);if(!this.my||!t||!t.room.name==this.name||t.structureType!=STRUCTURE_LAB&&t.structureType!=STRUCTURE_POWER_SPAWN&&t.structureType!=STRUCTURE_CONTAINER&&t.structureType!=STRUCTURE_STORAGE&&t.structureType!=STRUCTURE_TERMINAL)return ERR_INVALID_TARGET;if(!RESOURCES_ALL.includes(r))return ERR_INVALID_ARGS;if(void 0===this.memory.resources&&(this.memory.resources={lab:[],powerSpawn:[],container:[],terminal:[],storage:[]}),void 0===this.memory.resources.powerSpawn&&(this.memory.resources.powerSpawn=[]),this.memory.resources[t.structureType].find(r=>r.id==e)||this.memory.resources[t.structureType].push(t.structureType==STRUCTURE_LAB?{id:e,orders:[],reactionState:LAB_IDLE}:{id:e,orders:[]}),t.structureType==STRUCTURE_LAB&&r!=RESOURCE_ENERGY&&o>0){let o=this.memory.resources[STRUCTURE_LAB].find(r=>r.id==e).orders;for(let t=0;t<o.length;t++)o[t].type!=r&&o[t].type!=RESOURCE_ENERGY&&(o[t].orderAmount=0,o[t].orderRemaining=0,o[t].storeAmount=0)}return OK},Room.prototype.cancelOrder=function(e,r=null){let o=Game.getObjectById(e);if(this.prepareResourceOrder(e,RESOURCE_ENERGY,0)!=OK)return ret;let t=this.memory.resources[o.structureType].find(r=>r.id==e);if(t)if(r){let e=t.orders.find(e=>e.type==r);e&&(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"cancelOrder",orderId:orderId,resourceType:r}),t.orders.splice(t.orders.indexOf(e),1))}else global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"cancelOrder",orderId:orderId,resourceType:"all"}),t.orders=[];return OK},Room.prototype.placeOrder=function(e,r,o){let t=Game.getObjectById(e),n=this.prepareResourceOrder(e,r,o);if(n!=OK)return n;let s=this.memory.resources[t.structureType].find(r=>r.id==e);if(s){let e=s.orders.find(e=>e.type==r);if(e)e.orderAmount+=o,e.orderRemaining+=o;else{let e=0;e=t.structureType===STRUCTURE_LAB?t.mineralType==r?t.mineralAmount:0:t.store[r]||0,s.orders.push({type:r,orderAmount:o,orderRemaining:o-e,storeAmount:0}),t.structureType===STRUCTURE_LAB&&(s.reactionType=r)}}return OK},Room.prototype.setStore=function(e,r,o){let t=Game.getObjectById(e),n=this.prepareResourceOrder(e,r,o);if(n!=OK)return n;let s=this.memory.resources[t.structureType].find(r=>r.id==e);if(s){let e=s.orders.find(e=>e.type==r);e?e.storeAmount=o:s.orders.push({type:r,orderAmount:0,orderRemaining:0,storeAmount:o})}return OK},Room.prototype.cancelRoomOrder=function(e=null,r=null){void 0===this.memory.resources&&(this.memory.resources={lab:[],container:[],terminal:[],storage:[]}),void 0===this.memory.resources.powerSpawn&&(this.memory.resources.powerSpawn=[]),void 0===this.memory.resources.orders&&(this.memory.resources.orders=[]);let o=this.memory.resources.orders;if(e&&r){let t=o.find(o=>{return o.id==e&&o.type==r});t&&(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"cancelRoomOrder",orderId:e,resourceType:r}),o.splice(o.indexOf(t),1))}else if(e){global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"cancelRoomOrder",orderId:e,resourceType:"all"});for(let r=0;r<o.length;r++){let t=o[r];t.id===e&&o.splice(r--,1)}}else this.memory.resources.orders=[];return OK},Room.prototype.placeRoomOrder=function(e,r,o){if(o<=0)return OK;void 0===this.memory.resources&&(this.memory.resources={lab:[],container:[],terminal:[],storage:[]}),void 0===this.memory.resources.powerSpawn&&(this.memory.resources.powerSpawn=[]),void 0===this.memory.resources.orders&&(this.memory.resources.orders=[]);let t=this.memory.resources.orders,n=t.find(o=>{return o.id==e&&o.type==r});return n?(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"placeRoomOrder",subAction:"update",orderId:e,resourceType:r,amount:o}),n.amount=o):(global.DEBUG&&global.TRACE&&trace("Room",{roomName:this.name,actionName:"placeRoomOrder",subAction:"new",orderId:e,resourceType:r,amount:o}),global.DEBUG&&logSystem(this.name,`New room order with id ${e} placed for ${o} ${r}.`),t.push({id:e,type:r,amount:o,offers:[]})),OK},Room.prototype.terminalBroker=function(){if(this.my&&this.terminal&&this.storage){let e=this,r=this.mineralType,o=!1,t=this.terminal.sum/this.terminal.storeCapacity>.8;if(this.terminal.store[r]>=MIN_MINERAL_SELL_AMOUNT){let n=Game.market.getAllOrders(o=>{return!(!o.roomName||o.resourceType!=r||"buy"!=o.type||o.amount<MIN_MINERAL_SELL_AMOUNT)&&(o.range=Game.map.getRoomLinearDistance(o.roomName,e.name,!0),o.transactionAmount=Math.min(o.amount,e.terminal.store[r]),o.transactionCost=Game.market.calcTransactionCost(o.transactionAmount,e.name,o.roomName),o.transactionCost>e.terminal.store.energy&&o.transactionAmount>MIN_MINERAL_SELL_AMOUNT&&(o.transactionAmount=MIN_MINERAL_SELL_AMOUNT,o.transactionCost=Game.market.calcTransactionCost(o.transactionAmount,e.name,o.roomName)),o.credits=o.transactionAmount*o.price,o.ratio=(o.credits-o.transactionCost*ENERGY_VALUE_CREDITS)/o.transactionAmount,(t||o.ratio>=MIN_SELL_RATIO[r])&&o.transactionCost<=e.terminal.store.energy)});if(n.length>0){let t=_.max(n,"ratio"),s=Game.market.deal(t.id,t.transactionAmount,e.name);(global.DEBUG||SELL_NOTIFICATION)&&logSystem(e.name,`Selling ${t.transactionAmount} ${r} for ${t.credits} (${t.price} Â¢/${r}, ${t.transactionCost} e): ${translateErrorCode(s)}`),SELL_NOTIFICATION&&Game.notify(`<h2>Room ${e.name} executed an order!</h2><br/>Result: ${translateErrorCode(s)}<br/>Details:<br/>${JSON.stringify(t).replace(",",",<br/>")}`),o=s==OK}}if(8==this.controller.level&&!o&&this.storage.charge>.8&&(this.terminal.store[r]||0)<15e4&&this.terminal.store.energy>55e3){let r=e=>e.my&&e.storage&&e.terminal&&e.terminal.sum<e.terminal.storeCapacity-5e4&&e.storage.sum<.6*e.storage.storeCapacity&&!e._isReceivingEnergy,t=_.min(_.filter(Game.rooms,r),"storage.store.energy");if(t instanceof Room&&Game.market.calcTransactionCost(5e4,this.name,t.name)<this.terminal.store.energy-5e4){t._isReceivingEnergy=!0;let r=this.terminal.send("energy",5e4,t.name,"have fun");global.DEBUG&&logSystem(e.name,`Transferring 50k energy to ${t.name}: ${translateErrorCode(r)}`),o=r==OK}}o||(o=this.fillARoomOrder())}}};