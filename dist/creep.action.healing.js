let t=new Creep.Action("healing");module.exports=t,t.targetRange=3,t.isAddableAction=function(){return!0},t.isAddableTarget=function(e,a){const r=a.getStrategyHandler([t.name],"targetFilter",a);return r&&r(e)},t.isValidTarget=function(e,a){if(null!=e&&null!=e.hits&&e.hits<e.hitsMax&&e.pos.roomName===a.data.healRoom){const r=a.getStrategyHandler([t.name],"targetFilter",a);return r&&r(e)}return!1},t.newTarget=function(t){if(t.room.casualties.length>0)for(const e of t.room.casualties)if(e.name!==t.name)return t.data.healRoom=e.pos.roomName,e;return delete t.data.healRoom,null},t.work=function(t){if(t.target.hits<t.target.hitsMax)return t.pos.isNearTo(t.target)?t.heal(t.target):t.pos.inRangeTo(t.target,3)?t.rangedHeal(t.target):OK},t.defaultStrategy.targetFilter=function(t){return function(t){return t.my}};