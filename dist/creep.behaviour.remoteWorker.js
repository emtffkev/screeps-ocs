let a={};module.exports=a,a.name="remoteWorker",a.run=function(a){const t=a.data.destiny&&Game.flags[a.data.destiny.targetName];if(!(t||a.action&&"recycling"===a.action.name))return Creep.action.recycling.assign(a);if(!Creep.action.avoiding.run(a)){a.data.targetId;null!=a.action&&"idle"!=a.action.name||this.nextAction(a),a.action&&a.target?a.action.step(a):logError("Creep without action/activity!\nCreep: "+a.name+"\ndata: "+JSON.stringify(a.data))}},a.nextAction=function(a){if(a.data.destiny.room!=a.pos.roomName)return void this.gotoTargetRoom(a);{let n;n=a.sum<.8*a.carryCapacity?[Creep.action.picking,Creep.action.uncharging,Creep.action.withdrawing,Creep.action.harvesting,Creep.action.idle]:[Creep.action.repairing,Creep.action.building,Creep.action.recycling];for(var t=0;t<n.length;t++){var e=n[t];if(e.isValidAction(a)&&e.isAddableAction(a)&&e.assign(a))return}}let n=Game.spawns[a.data.motherSpawn];n&&Creep.action.recycling.assign(a,n)},a.gotoTargetRoom=function(a){const t=a.data.destiny?Game.flags[a.data.destiny.targetName]:null;if(t)return Creep.action.travelling.assignRoom(a,t.pos.roomName)},a.goHome=function(a){return Creep.action.travelling.assignRoom(a,a.data.homeRoom)};