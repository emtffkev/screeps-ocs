const t=new Creep.Action("avoiding");module.exports=t,t.lairDangerTime=24,t.targetRange=0,t.reachedRange=0,t.isActiveLair=function(o){return!(o.ticksToSpawn>t.lairDangerTime)},t.isValidAction=function(t){return t.data.destiny&&t.data.destiny.room===t.room.name&&(Room.isSKRoom(t.room.name)||t.room.situation.invasion)},t.isAddableAction=function(t){return!0},t.isValidTarget=function(o,e){return Task.reputation.npcOwner(o)?t.isActiveLair(o):!(!Task.reputation.hostileOwner(o)||!o.hasActiveBodyparts)&&o.hasActiveBodyparts([ATTACK,RANGED_ATTACK])},t.newTarget=function(o){if(Room.isSKRoom(o.pos.roomName)){const e=_.first(o.room.find(FIND_STRUCTURES,{filter:function(e){return!_.isUndefined(e.ticksToSpawn)&&t.isActiveLair(e)&&o.pos.getRangeTo(e.pos)<15}}));if(e)return e}if(o.room.situation.invasion){const e=_.chain(o.room.hostiles).filter(function(o){return t.isValidTarget(o)}).map(function(t){let e=0;const a=o.pos.getRangeTo(t);return e="Invader"===o.owner.username?a-51:a<10?a-11:0,{target:t,score:e}}).filter("score").sortBy("score").first().get("target").value();if(e)return e}},t.work=function(t){if(!t.data.safeSpot||!t.data.safeSpot.roomName){const o=t.data.destiny&&Game.flags[t.data.destiny.targetName];if(o)t.data.safeSpot=o.pos;else{const o=_.chain(t.room.findRoute(t.data.homeRoom)).first().get("exit").value();o&&(t.data.safeSpot=t.pos.findClosestByRange(o),t.data.safeSpot.roomName=t.pos.roomName)}}t.data.safeSpot&&(t.pos.getRangeTo(t.target)<10?t.travelTo(t.data.safeSpot):t.idleMove())},t.run=function(o){if(t.isValidAction(o)&&(o.action===t&&t.isValidTarget(o.target,o)||t.isAddableAction(o)&&t.assign(o)))return t.work(o),!0};