const t=new Creep.Behaviour("remoteHauler");module.exports=t,t.nextAction=function(t){const i=t.data.destiny&&Game.flags[t.data.destiny.targetName];if(!i)return Creep.action.recycling.assign(t);if(t.pos.roomName==t.data.homeRoom){if(t.sum>0){let i=[];if(t.carry.energy==t.sum&&(i=t.room.structures.links.privateers),t.room.storage&&i.push(t.room.storage),t.room.structures.container&&(i=i.concat(t.room.structures.container.privateers)),i.length>0){let n=t.pos.findClosestByRange(i);if(n.structureType==STRUCTURE_STORAGE&&this.assignAction(t,"storing",n))return;if(this.assignAction(t,"charging",n))return;if(this.assignAction(t,"storing"))return}if(this.assignAction(t,"charging"))return;if(this.assignAction(t,"feeding"))return;if(this.assignAction(t,"dropping"))return;{const i=i=>{t.carry[i]>0&&t.drop(i)};return _.forEach(Object.keys(t.carry),i),this.assignAction(t,"idle")}}if(this.gotoTargetRoom(t))return}else{if(t.data.destiny.room==t.pos.roomName){if(t.sum/t.carryCapacity>REMOTE_HAULER.MIN_LOAD)return void this.goHome(t);if(this.assignAction(t,"uncharging"))return;if(this.assignAction(t,"picking"))return;if(0===t.sum){let i=t.pos.findClosestByRange(t.room.sources);if(t.room&&i&&t.pos.getRangeTo(i)>3)return t.data.travelRange=3,this.assignAction(t,"travelling",i)}return this.assignAction(t,"idle")}{let i=!1;if(i=t.sum/t.carryCapacity>REMOTE_HAULER.MIN_LOAD?this.goHome(t):this.gotoTargetRoom(t))return}}let n=Game.spawns[t.data.motherSpawn];n&&this.assignAction(t,Creep.action.recycling,n)},t.gotoTargetRoom=function(t){const i=t.data.destiny?Game.flags[t.data.destiny.targetName]:null;if(i)return Creep.action.travelling.assignRoom(t,i.pos.roomName)},t.goHome=function(t){return Creep.action.travelling.assignRoom(t,t.data.homeRoom)},t.strategies.picking={name:`picking-${t.name}`,energyOnly:!1};