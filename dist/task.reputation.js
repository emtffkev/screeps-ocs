const e={["Source Keeper"]:!0,["Invader"]:!0},n={MY_SCORE:1e3,WHITELIST_SCORE:200,ALLY:100,NEUTRAL:1,NPC_SCORE:-200},o={name:"reputation",myName:()=>ME,isNPC:n=>e[n]===!0,npcOwner:e=>e.owner&&o.isNPC(e.owner.username),isAlly:e=>o.score(e)>=n.ALLY,notAlly:e=>!o.isAlly(e),allyOwner:e=>e.owner&&o.isAlly(e.owner.username),isHostile:e=>o.score(e)<n.NEUTRAL,notHostile:e=>!o.isHostile(e),hostileOwner:e=>e.owner&&o.isHostile(e.owner.username),whitelist:()=>o.cache("whitelist"),score:e=>{const n=o.cache("score");if(void 0===e)return n;const t=e&&e.toLowerCase();return n[t]?n[t]:n[t]=0},setScore:(e,n)=>{const t=e&&e.toLowerCase();o.score()[t]=n,o.playerMemory(t).score=n},flush:()=>{o._loadWhitelist(),o._loadScore()},cache:e=>Task.cache(o.name,e),killScoreCache:()=>{return Task.clearCache(o.name,"score"),o.score()},killWhitelistCache:()=>{return Task.clearCache(o.name,"score"),Task.clearCache(o.name,"whitelist"),o.whitelist()},memory:e=>Task.memory(o.name,e),playerMemory:e=>{const n=o.memory("players"),t=e&&e.toLowerCase();return n[t]?n[t]:n[t]={}},_loadScore:()=>{const t=o.cache("etc"),c=o.memory("players"),i=o.whitelist();let r=o.score();if(_.keys(c).length+_.keys(i).length!==_.keys(r).length+t.whitelistRepUnion){r=o.killScoreCache();for(const s in e)r[s]=n.NPC_SCORE;_.keys(i).forEach(function(e){r[e]=n.WHITELIST_SCORE}),t.whitelistRepUnion=0,_.reduce(c,function(e,n,o){return"number"==typeof n.score&&(i[o]&&t.whitelistRepUnion++,e[o]=n.score),e},r),o.setScore(o.myName(),n.MY_SCORE)}},_loadWhitelist:()=>{let e=o.whitelist();_.keys(e).length!==PLAYER_WHITELIST.length&&(e=o.killWhitelistCache(),_.forEach(PLAYER_WHITELIST,function(n){e[n.toLowerCase()]=!0}))}};module.exports=o;