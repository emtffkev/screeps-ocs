let e={};e.run=function(){Memory.stats={tick:Game.time},Memory.stats.cpu=Game.cpu,Memory.stats.cpu.used=Game.cpu.getUsed(),Memory.stats.gcl=Game.gcl,Memory.stats.market={credits:Game.market.credits,numOrders:Game.market.orders?Object.keys(Game.market.orders).length:0},Memory.stats.rooms={};for(let r in Game.rooms){const s=Game.rooms[r];s&&s.my&&(Memory.stats.rooms[s.name]={name:s.name,spawns:{},storage:{},terminal:{},minerals:{},sources:{}},e.init(s,Memory.stats.rooms[s.name]))}},e.init=function(r,s){e.controller(r,s),e.energy(r,s),e.spawns(r,s.spawns),e.storage(r,s.storage),e.terminal(r,s.terminal),e.minerals(r,s.minerals),e.sources(r,s.sources)},e.controller=function(e,r){e.controller&&(r.controller={level:e.controller.level,progress:e.controller.progress,progressTotal:e.controller.progressTotal})},e.energy=function(e,r){r.energy={available:e.energyAvailable,capacityAvailable:e.energyCapacityAvailable}},e.spawns=function(e,r){e.structures.spawns&&e.structures.spawns.forEach(e=>{r[e.name]={name:e.name,spawning:null!==e.spawning?1:0}})},e.storage=function(e,r){e.storage&&(r.store=_.sum(e.storage.store),r.resources={},Object.keys(e.storage.store).forEach(s=>r.resources[s]=e.storage.store[s]))},e.terminal=function(e,r){e.terminal&&(r.store=_.sum(e.terminal.store),r.resources={},Object.keys(e.terminal.store).forEach(s=>r.resources[s]=e.terminal.store[s]))},e.minerals=function(e,r){e.minerals&&e.minerals.forEach(e=>r[e.id]={id:e.id,density:e.density,mineralAmount:e.mineralAmount,mineralType:e.mineralType,ticksToRegeneration:e.ticksToRegeneration})},e.sources=function(e,r){e.sources&&e.sources.forEach(e=>r[e.id]={id:e.id,energy:e.energy,energyCapacity:e.energyCapacity,ticksToRegeneration:e.ticksToRegeneration})},module.exports=e;