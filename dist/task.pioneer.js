// This task will react on pioneer flags - 4 for Green/White, 1 for Green/Red
let e={};module.exports=e,e.register=(()=>{}),e.handleRoomDied=(e=>{const n="collapseWorker";if(!e.population||!e.population.typeCount[n]){let a=!0;if(e.energyAvailable>199&&(e.spawnQueueHigh.splice(0,e.spawnQueueHigh.length),a=!Task.spawn(Task.pioneer.creep.worker,{task:n,targetName:e.name},{explicit:e.name})),a){let n=FlagDir.find(FLAG_COLOR.claim.pioneer,e);n||e.newFlag(FLAG_COLOR.claim.pioneer)}}}),e.handleFlagFound=(e=>{e.compareTo(FLAG_COLOR.claim.pioneer)&&Task.pioneer.checkForRequiredCreeps(e)}),e.checkForRequiredCreeps=(e=>{if(!e||e.room&&!e.room.my&&!e.room.reserved){if(!PIONEER_UNOWNED)return console.log("Pioneer room not owned",Util.stack());const n=e.room.owner||e.room.reservation;if(n&&!Task.reputation.isAlly(n))return logError(`Pioneer target room owned by ${n}`)}let n=Task.pioneer.memory(e),a=n.queued.length+n.spawning.length+n.running.length;a<1&&Task.spawn(Task.pioneer.creep.pioneer,{task:"pioneer",targetName:e.name,flagName:e.name},{targetRoom:e.pos.roomName,minEnergyCapacity:400,rangeRclRatio:2},n=>{let a=Task.pioneer.memory(Game.flags[n.destiny.targetName]);a.queued.push({room:n.queueRoom,name:n.name,targetName:e.name})})}),e.handleSpawningStarted=(e=>{if(e.destiny&&e.destiny.task&&"pioneer"==e.destiny.task){let n=Game.flags[e.destiny.flagName];if(n){let a=Task.pioneer.memory(n);a.spawning.push(e);let o=[],i=e=>{let n=Game.rooms[e.room];(n.spawnQueueMedium.some(n=>n.name==e.name)||n.spawnQueueLow.some(n=>n.name==e.name))&&o.push(e)};a.queued.forEach(i),a.queued=o}}}),e.handleSpawningCompleted=(e=>{if(e.data&&e.data.destiny&&e.data.destiny.task&&"pioneer"==e.data.destiny.task){let n=Game.flags[e.data.destiny.flagName];if(n){e.data.predictedRenewal=e.data.spawningTime+50*routeRange(e.data.homeRoom,n.pos.roomName);let a=Task.pioneer.memory(n);a.running.push(e.name);let o=[],i=e=>{let n=Game.spawns[e.spawn];n&&(n.spawning&&n.spawning.name==e.name||n.newSpawn&&n.newSpawn.name==e.name)&&(count++,o.push(e))};a.spawning.forEach(i),a.spawning=o}}}),e.handleCreepDied=(e=>{let n=Memory.population[e];if(n&&n.destiny&&n.destiny.task&&"pioneer"==n.destiny.task){let a=Game.flags[n.destiny.flagName];if(a){let n=Task.pioneer.memory(a),o=[],i=n=>{let i=Game.creeps[n];if(i&&i.data){let r;r=i.data.predictedRenewal?i.data.predictedRenewal:i.data.spawningTime?i.data.spawningTime+50*routeRange(i.data.homeRoom,a.pos.roomName):50*(routeRange(i.data.homeRoom,a.pos.roomName)+1),i.name!=e&&i.ticksToLive>r&&o.push(n)}};n.running.forEach(i),n.running=o}}}),e.memory=(e=>{return e.memory.tasks||(e.memory.tasks={}),e.memory.tasks.pioneer||(e.memory.tasks.pioneer={queued:[],spawning:[],running:[]}),e.memory.tasks.pioneer}),e.creep={pioneer:{fixedBody:{[CARRY]:2,[MOVE]:2,[WORK]:2},multiBody:[WORK,MOVE,CARRY],name:"pioneer",behaviour:"pioneer",queue:"Low"},worker:{fixedBody:[MOVE,CARRY,WORK],behaviour:"collapseWorker",queue:"High"}};