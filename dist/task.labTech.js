// This task will react on labTech flags purple/white
const e={};module.exports=e,e.name="labTech",e.register=(()=>{Flag.found.on(e=>Task.labTech.handleFlagFound(e)),Creep.spawningStarted.on(e=>Task.labTech.handleSpawningStarted(e)),Creep.spawningCompleted.on(e=>Task.labTech.handleSpawningCompleted(e)),Creep.predictedRenewal.on(e=>Task.labTech.handleCreepDied(e.name)),Creep.died.on(e=>Task.labTech.handleCreepDied(e))}),e.handleFlagFound=(a=>{a.compareTo(FLAG_COLOR.labs.labTech)&&Task.nextCreepCheck(a,e.name)&&(Util.set(a.memory,"task",e.name),Task.labTech.checkForRequiredCreeps(a))}),e.checkForRequiredCreeps=(a=>{const n=Task.labTech.memory(a);Task.validateAll(n,a,e.name,{roomName:a.pos.roomName,checkValid:!0});const t=n.queued.length+n.spawning.length+n.running.length;t<1&&Task.spawn(Task.labTech.creep.labTech,{task:"labTech",targetName:a.name},{targetRoom:a.pos.roomName,minEnergyCapacity:1e3,maxRange:1,allowTargetRoom:!0},e=>{let a=Task.labTech.memory(Game.flags[e.destiny.targetName]);a.queued.push({room:e.queueRoom,name:e.name})})}),e.handleSpawningStarted=(a=>{if(a.destiny&&a.destiny.task&&"labTech"==a.destiny.task){let n=Game.flags[a.destiny.targetName||a.destiny.flagName];if(n){const t=Task.labTech.memory(n);t.spawning.push(a),Task.validateQueued(t,n,e.name)}}}),e.handleSpawningCompleted=(a=>{if(a.data&&a.data.destiny&&a.data.destiny.task&&"labTech"==a.data.destiny.task){let n=Game.flags[a.data.destiny.targetName||a.data.destiny.flagName];if(n){a.data.predictedRenewal=a.data.spawningTime+50*routeRange(a.data.homeRoom,n.pos.roomName);const t=Task.labTech.memory(n);t.running.push(a.name),Task.validateSpawning(t,n,e.name)}}}),e.handleCreepDied=(a=>{const n=Memory.population[a];if(n&&n.destiny&&n.destiny.task&&"labTech"==n.destiny.task){const t=Game.flags[n.destiny.targetName||n.destiny.flagName];if(t){const n=Task.labTech.memory(t);Task.validateRunning(n,t,e.name,{roomName:t.pos.roomName,deadCreep:a})}}}),e.memory=(e=>{return e.memory.tasks||(e.memory.tasks={}),e.memory.tasks.labTech||(e.memory.tasks.labTech={queued:[],spawning:[],running:[]}),e.memory.tasks.labTech}),e.creep={labTech:{fixedBody:[WORK,CARRY,MOVE],multiBody:[CARRY,CARRY,MOVE],name:"labTech",behaviour:"labTech",queue:"Low"}};