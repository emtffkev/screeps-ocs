let r=new Creep.Action("claiming");module.exports=r,r.isValidAction=function(r){return!0},r.isValidTarget=function(r){return!r.room||!r.owner},r.isAddableAction=function(){return!0},r.isAddableTarget=function(){return!0},r.newTarget=function(r){let e;if(r.data.destiny&&(e=Game.flags[r.data.destiny.targetName||r.data.destiny.flagName]),e||(e=FlagDir.find(FLAG_COLOR.claim,r.pos,!1,FlagDir.claimMod,r.name)),!e)return null;if(Population.registerCreepFlag(r,e),!r.flag.room||r.flag.pos.roomName!=r.pos.roomName)return r.flag;if(r.flag.room.controller.my){r.flag.setColor(FLAG_COLOR.claim.spawn.color,FLAG_COLOR.claim.spawn.secondaryColor);let e=r=>Game.flags[r.name].remove();return _.forEach(FlagDir.filter(FLAG_COLOR.invade.exploit,r.flag.pos,!0),e),null}return r.flag.room.controller},r.step=function(r){if(CHATTY&&r.say(this.name,SAY_PUBLIC),r.target.color)return r.flag.pos.roomName==r.pos.roomName&&(r.data.targetId=null),void r.travelTo(r.target.pos);let e=r.pos.getRangeTo(r.target);if(e<=this.targetRange){var a=this.work(r);a!=OK&&r.handleError({errorCode:a,action:this,target:r.target,range:e,creep:r})}r.travelTo(r.target.pos)},r.work=function(r){return r.controllerSign(),r.claimController(r.target)};