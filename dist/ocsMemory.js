let e={};module.exports=e,e.numSaved=0,e.toActivate={},e.activateSegment=((t,a=false)=>{if(t.start&&t.end)for(let n=t.start;n>=t.end;n--)e.activateSegment(n,a);else{if(t<0||t>99)return logError("RawMemory","cannot activate invalid segment "+t);const n=_.size(RawMemory.segments);if(e.numSaved>=10)return logError("RawMemory","10 segments saved, cannot activate segment "+t);if(!a){if(n>=10)return logError("RawMemory","10 segments loaded, cannot activate segment "+t);if(n+e.numSaved>=10)return logError("RawMemory","combined loaded and saved exceeds limit(10), cannot activate segment "+t)}e.toActivate[t]=!0}}),e.deactivateSegment=(t=>{return t<0||t>99?logError("RawMemory","cannot deactivate invalid segment "+t):(0===_.size(e.toActivate)&&Object.keys(RawMemory.segments).forEach(t=>e.toActivate[t]=!0),void delete e.toActivate[t])}),e.cacheValid=(e=>{return global.cacheValid[e]===Memory.cacheValid[e]}),e.processSegment=((t,a)=>{_.isUndefined(Memory.cacheValid[t])&&(Memory.cacheValid[t]=!1);const n=RawMemory.segments[t];if(!e.cacheValid(t))try{let e=n?JSON.parse(n):{};a(e),global.cacheValid[t]=Memory.cacheValid[t]}catch(e){console.log('<font style="color:FireBrick">Error loading segment'+t+" caused by "+(e.stack||e.toString())+"</font>"),RawMemory.segments[t]="",delete global.cacheValid[t],delete Memory.cacheValid[t]}}),e.processSegments=(()=>{_.isUndefined(global.cacheValid)&&(global.cacheValid={}),_.isUndefined(Memory.cacheValid)&&(Memory.cacheValid={});for(let t=MEM_SEGMENTS.COSTMATRIX_CACHE.start;t>=MEM_SEGMENTS.COSTMATRIX_CACHE.end;t--)e.processSegment(t,Room.loadCostMatrixCache)}),e.saveSegment=((t,a)=>{const n=_.size(RawMemory.segments),o=Object.keys(a);let r,c=0;for(let s=t.start;s>=t.end;s--)if(o&&c<o.length||r&&r.length>1)if(!_.isUndefined(RawMemory.segments[s])||n+e.numSaved<10){let t,n=!1;for(;c<o.length;){const e=o[c];c++;const s=JSON.stringify(a[e]);if(t=`"${e}":${s}`,n=(_.get(r,"length",0)+_.get(t,"length",0)+2)/1024>100)break;r=r?r+","+t:"{"+t}if(!r&&t&&t.length>0){const e=_.round((t.length+2)/1024,2);return logError("RawMemory",`Cannot save data at key ${c}, exceeds 100kb limit ${e}kb`)}DEBUG&&logSystem("OCSMemory.saveSegment","Saving "+_.round(r.length/1024,2)+"kb of data to segment "+s),RawMemory.segments[s]=r+"}",Memory.cacheValid[s]=Game.time,r=n&&t?"{"+t:"{",_.isUndefined(RawMemory.segments[s])&&e.numSaved++}else{if(n>10)return logError("RawMemory","cannot save segment "+s+" too many active segments.");if(n+e.numSaved>10)return logError("RawMemory","cannot save segment "+s+" loaded + saved exceeds limit(10).");logError("RawMemory","should not be here.")}else Memory.cacheValid[s]&&(DEBUG&&logSystem("OCSMemory.saveSegment","clearing unused segment "+s),RawMemory.segments[s]="",delete Memory.cacheValid[s])}),e.cleanup=(()=>{_.size(e.toActivate)>0&&RawMemory.setActiveSegments(Object.keys(e.toActivate)),e.toActivate={},e.numSaved=0});