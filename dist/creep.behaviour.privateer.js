let o=new Creep.Behaviour("privateer");module.exports=o;const i=o.invalidAction;o.invalidAction=function(o){return i.call(this,o)||!o.flag};const e=o.run;o.run=function(o){if(e.call(this,o),o.hits<o.hitsMax&&(!o.action||"travelling"!==o.action.name)&&(o.data.nearestHome&&Game.rooms[o.data.nearestHome]||(o.data.nearestHome=Room.bestSpawnRoomFor(o.pos.roomName)),o.data.nearestHome))return void Creep.action.travelling.assignRoom(o,o.data.homeRoom)},o.nextAction=function(o){let i=o.sum;if(o.pos.roomName==o.data.homeRoom){if(i>0){let e=[];if(o.carry.energy==i&&(e=o.room.structures.links.privateers),o.room.storage&&e.push(o.room.storage),o.room.structures.container&&(e=e.concat(o.room.structures.container.privateers)),e.length>0){let i=o.pos.findClosestByRange(e);if(i.structureType===STRUCTURE_STORAGE&&this.assignAction(o,"storing",i))return;if(this.assignAction(o,"charging",i))return}if(this.assignAction(o,"charging"))return;if(!o.room.ally&&this.assignAction(o,"storing"))return;return void Creep.behaviour.worker.nextAction.call(this,o)}return this.exploitNextRoom(o)?void 0:void Creep.behaviour.worker.nextAction.call(this,o)}if(o.flag&&o.flag.pos.roomName==o.pos.roomName){if(o.room.situation.invasion&&!o.flag.compareTo(FLAG_COLOR.invade.robbing))return o.flag.cloaking=50,void this.exploitNextRoom(o);if(o.sum<.4*o.carryCapacity){if(0===o.room.sourceEnergyAvailable)return o.flag.cloaking=_.max([o.room.ticksToNextRegeneration-20,0]),void this.exploitNextRoom(o);for(var e=[Creep.action.dismantling,Creep.action.picking,Creep.action.robbing,Creep.action.harvesting],t=0;t<e.length;t++){var r=e[t];if(r.isValidAction(o)&&r.isAddableAction(o)&&r.assign(o))return}return o.flag.cloaking=50,void this.exploitNextRoom(o)}for(var e=[Creep.action.building],t=0;t<e.length;t++){var r=e[t];if(r.isValidAction(o)&&r.isAddableAction(o)&&r.assign(o))return}return Population.registerCreepFlag(o,null),void Creep.action.travelling.assignRoom(o,o.data.homeRoom)}return void this.exploitNextRoom(o)},o.exploitNextRoom=function(o){if(o.sum<.4*o.carryCapacity){let i=o=>Flag.compare(o,FLAG_COLOR.invade.exploit)||Flag.compare(o,FLAG_COLOR.invade.robbing),e=FlagDir.find(i,new RoomPosition(25,25,o.data.homeRoom),!1,FlagDir.exploitMod,o.name);if(e&&Creep.action.travelling.assignRoom(o,e.pos.roomName))return Population.registerCreepFlag(o,e),!0}return Population.registerCreepFlag(o,null),o.room.name!==o.data.homeRoom&&Creep.action.travelling.assignRoom(o,o.data.homeRoom),!1},o.strategies.withdrawing={name:`withdrawing-${o.name}`,isValidAction:function(o){return!1}};