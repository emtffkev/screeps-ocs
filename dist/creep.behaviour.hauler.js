let e={};module.exports=e,e.name="hauler",e.run=function(e){e.data.targetId;null!=e.action&&"idle"!=e.action.name||this.nextAction(e),e.action&&e.target?e.action.step(e):logError("Creep without action/activity!\nCreep: "+e.name+"\ndata: "+JSON.stringify(e.data))},e.nextAction=function(e){if(e.pos.roomName!=e.data.homeRoom&&Game.rooms[e.data.homeRoom]&&Game.rooms[e.data.homeRoom].controller)return void Creep.action.travelling.assignRoom(e,e.data.homeRoom);if(e.data.nextAction&&e.data.nextTarget){const t=Creep.action[e.data.nextAction],a=Game.getObjectById(e.data.nextTarget);if(delete e.data.nextAction,delete e.data.nextTarget,t&&a&&t.assign(e,a))return}const t=[Creep.action.feeding,Creep.action.charging,Creep.action.fueling];let a=t;2*e.sum<e.carryCapacity?a=[Creep.action.uncharging,Creep.action.picking,Creep.action.withdrawing,Creep.action.reallocating,Creep.action.idle]:(a=t.concat([Creep.action.storing,Creep.action.idle]),(e.sum>e.carry.energy||!e.room.situation.invasion&&global.SPAWN_DEFENSE_ON_ATTACK&&e.room.conserveForDefense&&e.room.relativeEnergyAvailable>.8)&&a.unshift(Creep.action.storing),e.room.structures.urgentRepairable.length>0&&a.unshift(Creep.action.fueling));for(var n=0;n<a.length;n++){var i=a[n];if(i.isValidAction(e)&&i.isAddableAction(e)){const a=i.assignDebounce?i.assignDebounce(e,t):i.assign(e);if(a)return void("idle"!==i.name&&(e.data.lastAction=i.name,e.data.lastTarget=e.target.id))}}},e.selectStrategies=function(t){return[e.strategies.defaultStrategy,e.strategies[t]]},e.strategies={defaultStrategy:{name:`default-${e.name}`},picking:{name:`picking-${e.name}`,energyOnly:!1}};